{"version":3,"file":"tools_feature_src_index_ts.js","mappings":"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","sources":["./tools/feature/src/index.ts","./tools/feature/src/lib/dashboard-feature.component.ts","./tools/feature/src/lib/dashboard-feature.component.html","./tools/feature/src/lib/dashboard-feature.routes.ts","./tools/feature/src/lib/tools-feature.module.ts","./node_modules/@angular/material/fesm2022/card.mjs","./node_modules/@angular/material/fesm2022/grid-list.mjs"],"sourcesContent":["export * from './lib/tools-feature.module'\nexport * from './lib/dashboard-feature.routes'\n\nexport * from './lib/dashboard-feature.routes'\n","import {Component, ChangeDetectionStrategy} from '@angular/core'\nimport {BehaviorSubject} from 'rxjs'\n\n@Component({\n  selector: 'dev-dashboard-feature',\n  templateUrl: './dashboard-feature.component.html',\n  styleUrls: ['./dashboard-feature.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardFeatureComponent {\n  #cards = new BehaviorSubject([\n    {\n      title: 'Conteúdos',\n      value: (Math.random() * 99).toFixed(),\n      cols: 1,\n      rows: 1,\n    },\n    {\n      title: 'Contas',\n      value: (Math.random() * 99).toFixed(),\n      cols: 1,\n      rows: 1,\n    },\n    {\n      title: 'Trilhas',\n      value: (Math.random() * 99).toFixed(),\n      cols: 1,\n      rows: 1,\n    },\n  ])\n  cards$ = this.#cards.asObservable()\n}\n","<header>\n  <h1 class=\"mat-h1\">Dashboard</h1>\n</header>\n<mat-grid-list cols=\"3\" rowHeight=\"350px\">\n  <mat-grid-tile\n    *ngFor=\"let card of cards$ | async\"\n    [colspan]=\"card.cols\"\n    [rowspan]=\"card.rows\"\n  >\n    <mat-card class=\"dashboard-card\">\n      <mat-card-content class=\"dashboard-card-content\">\n        <h2>{{ card.value }}</h2>\n        <div>{{ card.title }}</div>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import {Route} from '@angular/router'\nimport {DashboardFeatureComponent} from './dashboard-feature.component'\n\nexport const dashboardFeatureRoutes: Route[] = [\n  {\n    path: '',\n    component: DashboardFeatureComponent,\n  },\n]\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\nimport {dashboardFeatureRoutes} from './dashboard-feature.routes'\nimport {MatGridListModule} from '@angular/material/grid-list'\nimport {MatCardModule} from '@angular/material/card'\nimport {MatMenuModule} from '@angular/material/menu'\nimport {MatIconModule} from '@angular/material/icon'\nimport {MatButtonModule} from '@angular/material/button'\nimport {DashboardFeatureComponent} from './dashboard-feature.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(dashboardFeatureRoutes),\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [DashboardFeatureComponent],\n})\nexport class ToolsFeatureModule {}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, Input, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst MAT_CARD_CONFIG = new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCard {\n    constructor(config) {\n        this.appearance = config?.appearance || 'raised';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCard, deps: [{ token: MAT_CARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCard, selector: \"mat-card\", inputs: { appearance: \"appearance\" }, host: { properties: { \"class.mat-mdc-card-outlined\": \"appearance === \\\"outlined\\\"\", \"class.mdc-card--outlined\": \"appearance === \\\"outlined\\\"\" }, classAttribute: \"mat-mdc-card mdc-card\" }, exportAs: [\"matCard\"], ngImport: i0, template: \"<ng-content></ng-content>\\n\", styles: [\".mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation);--mdc-elevated-card-container-shape:4px;--mdc-outlined-card-container-shape:4px;--mdc-outlined-card-outline-width:1px}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCard, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card', host: {\n                        'class': 'mat-mdc-card mdc-card',\n                        '[class.mat-mdc-card-outlined]': 'appearance === \"outlined\"',\n                        '[class.mdc-card--outlined]': 'appearance === \"outlined\"',\n                    }, exportAs: 'matCard', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content></ng-content>\\n\", styles: [\".mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation);--mdc-elevated-card-container-shape:4px;--mdc-outlined-card-container-shape:4px;--mdc-outlined-card-outline-width:1px}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_CARD_CONFIG]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { appearance: [{\n                type: Input\n            }] } });\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardTitle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardTitle, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\", host: { classAttribute: \"mat-mdc-card-title\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                    host: { 'class': 'mat-mdc-card-title' },\n                }]\n        }] });\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nclass MatCardTitleGroup {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardTitleGroup, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardTitleGroup, selector: \"mat-card-title-group\", host: { classAttribute: \"mat-mdc-card-title-group\" }, ngImport: i0, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardTitleGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-title-group', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-mdc-card-title-group' }, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardContent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardContent, selector: \"mat-card-content\", host: { classAttribute: \"mat-mdc-card-content\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-content',\n                    host: { 'class': 'mat-mdc-card-content' },\n                }]\n        }] });\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardSubtitle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardSubtitle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardSubtitle, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\", host: { classAttribute: \"mat-mdc-card-subtitle\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardSubtitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                    host: { 'class': 'mat-mdc-card-subtitle' },\n                }]\n        }] });\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardActions {\n    constructor() {\n        // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n        // as to not conflict with the native `align` attribute.\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardActions, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardActions, selector: \"mat-card-actions\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-card-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-card-actions mdc-card__actions\" }, exportAs: [\"matCardActions\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-mdc-card-actions mdc-card__actions',\n                        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardHeader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardHeader, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardHeader, selector: \"mat-card-header\", host: { classAttribute: \"mat-mdc-card-header\" }, ngImport: i0, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-mdc-card-header' }, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardFooter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardFooter, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardFooter, selector: \"mat-card-footer\", host: { classAttribute: \"mat-mdc-card-footer\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardFooter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-mdc-card-footer' },\n                }]\n        }] });\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardImage {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardImage, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardImage, selector: \"[mat-card-image], [matCardImage]\", host: { classAttribute: \"mat-mdc-card-image mdc-card__media\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-mdc-card-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but small. */\nclass MatCardSmImage {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardSmImage, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardSmImage, selector: \"[mat-card-sm-image], [matCardImageSmall]\", host: { classAttribute: \"mat-mdc-card-sm-image mdc-card__media\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardSmImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-mdc-card-sm-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but medium. */\nclass MatCardMdImage {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardMdImage, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardMdImage, selector: \"[mat-card-md-image], [matCardImageMedium]\", host: { classAttribute: \"mat-mdc-card-md-image mdc-card__media\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardMdImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-mdc-card-md-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but large. */\nclass MatCardLgImage {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardLgImage, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardLgImage, selector: \"[mat-card-lg-image], [matCardImageLarge]\", host: { classAttribute: \"mat-mdc-card-lg-image mdc-card__media\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardLgImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-mdc-card-lg-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but extra-large. */\nclass MatCardXlImage {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardXlImage, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardXlImage, selector: \"[mat-card-xl-image], [matCardImageXLarge]\", host: { classAttribute: \"mat-mdc-card-xl-image mdc-card__media\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardXlImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-mdc-card-xl-image mdc-card__media' },\n                }]\n        }] });\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardAvatar {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatCardAvatar, selector: \"[mat-card-avatar], [matCardAvatar]\", host: { classAttribute: \"mat-mdc-card-avatar\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-mdc-card-avatar' },\n                }]\n        }] });\n\nconst CARD_DIRECTIVES = [\n    MatCard,\n    MatCardActions,\n    MatCardAvatar,\n    MatCardContent,\n    MatCardFooter,\n    MatCardHeader,\n    MatCardImage,\n    MatCardLgImage,\n    MatCardMdImage,\n    MatCardSmImage,\n    MatCardSubtitle,\n    MatCardTitle,\n    MatCardTitleGroup,\n    MatCardXlImage,\n];\nclass MatCardModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardModule, declarations: [MatCard,\n            MatCardActions,\n            MatCardAvatar,\n            MatCardContent,\n            MatCardFooter,\n            MatCardHeader,\n            MatCardImage,\n            MatCardLgImage,\n            MatCardMdImage,\n            MatCardSmImage,\n            MatCardSubtitle,\n            MatCardTitle,\n            MatCardTitleGroup,\n            MatCardXlImage], imports: [MatCommonModule, CommonModule], exports: [MatCard,\n            MatCardActions,\n            MatCardAvatar,\n            MatCardContent,\n            MatCardFooter,\n            MatCardHeader,\n            MatCardImage,\n            MatCardLgImage,\n            MatCardMdImage,\n            MatCardSmImage,\n            MatCardSubtitle,\n            MatCardTitle,\n            MatCardTitleGroup,\n            MatCardXlImage, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardModule, imports: [MatCommonModule, CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule],\n                    exports: [CARD_DIRECTIVES, MatCommonModule],\n                    declarations: CARD_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/bidi';\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() {\n        return this.rowIndex + 1;\n    }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while (gapEndIndex - gapStartIndex < tileCols || gapEndIndex == 0);\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\nclass MatGridTile {\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() {\n        return this._rowspan;\n    }\n    set rowspan(value) {\n        this._rowspan = Math.round(coerceNumberProperty(value));\n    }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() {\n        return this._colspan;\n    }\n    set colspan(value) {\n        this._colspan = Math.round(coerceNumberProperty(value));\n    }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n        this._element.nativeElement.style[property] = value;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTile, deps: [{ token: i0.ElementRef }, { token: MAT_GRID_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatGridTile, selector: \"mat-grid-tile\", inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, host: { properties: { \"attr.rowspan\": \"rowspan\", \"attr.colspan\": \"colspan\" }, classAttribute: \"mat-grid-tile\" }, exportAs: [\"matGridTile\"], ngImport: i0, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTile, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile', exportAs: 'matGridTile', host: {\n                        'class': 'mat-grid-tile',\n                        // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                        // the DOM. This is needed for the grid-tile harness.\n                        '[attr.rowspan]': 'rowspan',\n                        '[attr.colspan]': 'colspan',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_GRID_LIST]\n                }] }]; }, propDecorators: { rowspan: [{\n                type: Input\n            }], colspan: [{\n                type: Input\n            }] } });\nclass MatGridTileText {\n    constructor(_element) {\n        this._element = _element;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTileText, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatGridTileText, selector: \"mat-grid-tile-header, mat-grid-tile-footer\", queries: [{ propertyName: \"_lines\", predicate: MatLine, descendants: true }], ngImport: i0, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTileText, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile-header, mat-grid-tile-footer', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }] } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatGridAvatarCssMatStyler, selector: \"[mat-grid-avatar], [matGridAvatar]\", host: { classAttribute: \"mat-grid-avatar\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-grid-avatar], [matGridAvatar]',\n                    host: { 'class': 'mat-grid-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatGridTileHeaderCssMatStyler, selector: \"mat-grid-tile-header\", host: { classAttribute: \"mat-grid-tile-header\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-header',\n                    host: { 'class': 'mat-grid-tile-header' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTileFooterCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatGridTileFooterCssMatStyler, selector: \"mat-grid-tile-footer\", host: { classAttribute: \"mat-grid-tile-footer\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridTileFooterCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-footer',\n                    host: { 'class': 'mat-grid-tile-footer' },\n                }]\n        }] });\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() {\n        return null;\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return ['height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom',\n            calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`),\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() {\n        return this._cols;\n    }\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() {\n        return this._gutter;\n    }\n    set gutterSize(value) {\n        this._gutter = `${value == null ? '' : value}`;\n    }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() {\n        return this._rowHeight;\n    }\n    set rowHeight(value) {\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n        if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` + `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        const tracker = this._tileCoordinator;\n        const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((tile, index) => {\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridList, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatGridList, selector: \"mat-grid-list\", inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, host: { properties: { \"attr.cols\": \"cols\" }, classAttribute: \"mat-grid-list\" }, providers: [\n            {\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList,\n            },\n        ], queries: [{ propertyName: \"_tiles\", predicate: MatGridTile, descendants: true }], exportAs: [\"matGridList\"], ngImport: i0, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-list', exportAs: 'matGridList', host: {\n                        'class': 'mat-grid-list',\n                        // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                        // needed for the grid-list harness.\n                        '[attr.cols]': 'cols',\n                    }, providers: [\n                        {\n                            provide: MAT_GRID_LIST,\n                            useExisting: MatGridList,\n                        },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { _tiles: [{\n                type: ContentChildren,\n                args: [MatGridTile, { descendants: true }]\n            }], cols: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }] } });\n\nclass MatGridListModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridListModule, declarations: [MatGridList,\n            MatGridTile,\n            MatGridTileText,\n            MatGridTileHeaderCssMatStyler,\n            MatGridTileFooterCssMatStyler,\n            MatGridAvatarCssMatStyler], imports: [MatLineModule, MatCommonModule], exports: [MatGridList,\n            MatGridTile,\n            MatGridTileText,\n            MatLineModule,\n            MatCommonModule,\n            MatGridTileHeaderCssMatStyler,\n            MatGridTileFooterCssMatStyler,\n            MatGridAvatarCssMatStyler] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridListModule, imports: [MatLineModule, MatCommonModule, MatLineModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatGridListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatCommonModule],\n                    exports: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                    declarations: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                }]\n        }] });\n\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator };\n"],"names":["BehaviorSubject","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","card_r1","cols","rows","ɵɵadvance","ɵɵtextInterpolate","value","title","DashboardFeatureComponent","constructor","_classPrivateFieldInitSpec","_cards","writable","_classPrivateFieldSet","Math","random","toFixed","cards$","_classPrivateFieldGet","asObservable","selectors","decls","vars","consts","template","DashboardFeatureComponent_Template","rf","ctx","ɵɵtemplate","DashboardFeatureComponent_mat_grid_tile_4_Template","ɵɵpipeBind1","dashboardFeatureRoutes","path","component","CommonModule","RouterModule","MatGridListModule","MatCardModule","MatMenuModule","MatIconModule","MatButtonModule","ToolsFeatureModule","forChild","declarations","imports","i1","InjectionToken","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Optional","Input","Directive","NgModule","MatCommonModule","_c0","_c1","_c2","_c3","_c4","MAT_CARD_CONFIG","MatCard","config","appearance","_class","ɵfac","_class_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","hostAttrs","hostVars","hostBindings","_class_HostBindings","ɵɵclassProp","inputs","exportAs","ngContentSelectors","_class_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","undefined","decorators","MatCardTitle","_class2","_class2_Factory","ɵdir","ɵɵdefineDirective","MatCardTitleGroup","_class3","_class3_Factory","_class3_Template","MatCardContent","_class4","_class4_Factory","MatCardSubtitle","_class5","_class5_Factory","MatCardActions","align","_class6","_class6_Factory","_class6_HostBindings","MatCardHeader","_class7","_class7_Factory","_class7_Template","MatCardFooter","_class8","_class8_Factory","MatCardImage","_class9","_class9_Factory","MatCardSmImage","_class10","_class10_Factory","MatCardMdImage","_class11","_class11_Factory","MatCardLgImage","_class12","_class12_Factory","MatCardXlImage","_class13","_class13_Factory","MatCardAvatar","_class14","_class14_Factory","CARD_DIRECTIVES","_class15","_class15_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","ContentChildren","setLines","MatLine","MatLineModule","coerceNumberProperty","TileCoordinator","columnIndex","rowIndex","rowCount","rowspan","lastRowMax","max","tracker","update","numColumns","tiles","Array","fill","length","positions","map","tile","_trackTile","gapStartIndex","_findMatchingGap","colspan","_markTilePosition","TilePosition","tileCols","Error","gapEndIndex","_nextRow","indexOf","_findGapEndIndex","i","start","row","col","MAT_GRID_LIST","MatGridTile","_element","_gridList","_rowspan","_colspan","round","_setStyle","property","nativeElement","style","ElementRef","ɵɵattribute","MatGridTileText","ngAfterContentInit","_lines","contentQueries","_class2_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_class2_Template","descendants","MatGridAvatarCssMatStyler","MatGridTileHeaderCssMatStyler","MatGridTileFooterCssMatStyler","cssCalcAllowedValue","TileStyler","_rows","init","gutterSize","direction","_gutterSize","normalizeUnits","_cols","_direction","getBaseTileSize","sizePercent","gutterFraction","getTilePosition","baseSize","offset","calc","getTileSize","span","setStyle","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","side","getGutterSpan","getTileSpan","tileHeight","getComputedHeight","FixedTileStyler","fixedRowHeight","test","reset","list","_setListStyle","_tiles","forEach","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_dir","_gutter","rowHeight","_rowHeight","newValue","_setTileStyler","ngOnInit","_checkCols","_checkRowHeight","ngAfterContentChecked","_layoutTiles","_tileStyler","_tileCoordinator","filter","index","pos","Directionality","_class6_ContentQueries","features","ɵɵProvidersFeature","provide","useExisting","_class6_Template","providers","ɵTileCoordinator"],"sourceRoot":"webpack:///","x_google_ignoreList":[5,6]}