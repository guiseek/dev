{"version":3,"file":"main.js","mappings":"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","sources":["./account/data-access/src/index.ts","./account/data-access/src/lib/application/auth.facade.ts","./account/data-access/src/lib/application/group.facade.ts","./account/data-access/src/lib/application/index.ts","./account/data-access/src/lib/application/user.facade.ts","./account/data-access/src/lib/dtos/create-group.ts","./account/data-access/src/lib/dtos/create-user.ts","./account/data-access/src/lib/dtos/group.ts","./account/data-access/src/lib/dtos/index.ts","./account/data-access/src/lib/dtos/sign-in.ts","./account/data-access/src/lib/dtos/update-group.ts","./account/data-access/src/lib/dtos/update-password.ts","./account/data-access/src/lib/dtos/update-user.ts","./account/data-access/src/lib/dtos/user.ts","./account/data-access/src/lib/infrastructure/auth.service.impl.ts","./account/data-access/src/lib/infrastructure/auth.service.mock.ts","./account/data-access/src/lib/infrastructure/group.service.impl.ts","./account/data-access/src/lib/infrastructure/group.service.mock.ts","./account/data-access/src/lib/infrastructure/index.ts","./account/data-access/src/lib/infrastructure/user.service.impl.ts","./account/data-access/src/lib/infrastructure/user.service.mock.ts","./account/data-access/src/lib/providers/auth.ts","./account/data-access/src/lib/providers/group.ts","./account/data-access/src/lib/providers/index.ts","./account/data-access/src/lib/providers/user.ts","./account/data-access/src/public-api.ts","./account/domain/src/index.ts","./account/domain/src/lib/dtos/access-token.ts","./account/domain/src/lib/dtos/auth-request.ts","./account/domain/src/lib/dtos/auth-user.ts","./account/domain/src/lib/dtos/create-group.ts","./account/domain/src/lib/dtos/create-user.ts","./account/domain/src/lib/dtos/index.ts","./account/domain/src/lib/dtos/sign-in.ts","./account/domain/src/lib/dtos/update-group.ts","./account/domain/src/lib/dtos/update-password.ts","./account/domain/src/lib/dtos/update-user.ts","./account/domain/src/lib/entities/group.ts","./account/domain/src/lib/entities/index.ts","./account/domain/src/lib/entities/user.ts","./account/domain/src/lib/ports/auth.service.ts","./account/domain/src/lib/ports/crypto.service.ts","./account/domain/src/lib/ports/group.repository.ts","./account/domain/src/lib/ports/group.service.ts","./account/domain/src/lib/ports/index.ts","./account/domain/src/lib/ports/jwt.service.ts","./account/domain/src/lib/ports/user.repository.ts","./account/domain/src/lib/ports/user.service.ts","./account/domain/src/lib/use-cases/activate-user-auth.ts","./account/domain/src/lib/use-cases/create-user-account.ts","./account/domain/src/lib/use-cases/index.ts","./account/domain/src/lib/use-cases/sign-in-user-account.ts","./account/domain/src/public-api.ts","./account/ui-auth/src/index.ts","./account/ui-auth/src/lib/account-ui-auth.module.ts","./account/ui-auth/src/lib/components/index.ts","./account/ui-auth/src/lib/components/sign-in/sign-in.component.ts","./account/ui-auth/src/lib/components/sign-in/sign-in.component.html","./account/ui-auth/src/lib/components/sign-up/sign-up.component.ts","./account/ui-auth/src/lib/components/sign-up/sign-up.component.html","./account/ui-auth/src/lib/forms/index.ts","./account/ui-auth/src/lib/forms/sign-in.ts","./account/ui-auth/src/lib/forms/sign-up.ts","./account/ui-auth/src/public-api.ts","./app/src/app/app.component.ts","./app/src/app/app.interceptor.ts","./app/src/app/app.module.ts","./app/src/app/app.routes.ts","./app/src/app/auth/auth.component.ts","./app/src/app/auth/auth.component.html","./app/src/app/auth/auth.guard.ts","./app/src/app/auth/auth.interceptor.ts","./app/src/app/loader/index.ts","./app/src/app/loader/loader.component.ts","./app/src/app/shared/index.ts","./app/src/app/shared/material.ts","./app/src/envs/env.testing.ts","./app/src/main.ts","./shared/data-access/src/index.ts","./shared/data-access/src/lib/application/index.ts","./shared/data-access/src/lib/application/loader.ts","./shared/data-access/src/lib/application/store.ts","./shared/data-access/src/lib/data-access.ts","./shared/data-access/src/lib/infrastructure/base-service.ts","./shared/data-access/src/lib/infrastructure/in-memory.service.ts","./shared/data-access/src/lib/infrastructure/index.ts","./shared/data-access/src/lib/infrastructure/indexed-db.service.impl.ts","./shared/data-access/src/lib/infrastructure/mock.service.ts","./shared/data-access/src/lib/ports/http.ts","./shared/data-access/src/lib/ports/index.ts","./shared/data-access/src/lib/types/env.ts","./shared/data-access/src/lib/types/index.ts","./shared/data-access/src/lib/types/provide-svc.ts.ts","./shared/data-access/src/lib/types/svc-of.ts","./shared/data-access/src/public-api.ts","./shared/ui-base/src/index.ts","./shared/ui-base/src/lib/base/feature-container.ts","./shared/ui-base/src/lib/base/form-dialog.ts","./shared/ui-base/src/lib/base/index.ts","./shared/ui-base/src/lib/base/list-selectable.ts","./shared/ui-base/src/lib/components/index.ts","./shared/ui-base/src/lib/components/selection-menu/selection-menu.component.ts","./shared/ui-base/src/lib/components/selection-menu/selection-menu.ts","./shared/ui-base/src/lib/directives/index.ts","./shared/ui-base/src/lib/directives/menu-items-link-active.directive.ts","./shared/ui-base/src/lib/modules/index.ts","./shared/ui-base/src/lib/modules/shared-material.ts","./shared/ui-base/src/lib/ui-base.module.ts","./shared/ui-base/src/public-api.ts","./shared/ui-forms/src/index.ts","./shared/ui-forms/src/lib/base/index.ts","./shared/ui-forms/src/lib/base/typed-form-array.ts","./shared/ui-forms/src/lib/base/typed-form-group.ts","./shared/ui-forms/src/lib/components/filter-by/filter-by.component.ts","./shared/ui-forms/src/lib/components/filter-by/filter-by.component.html","./shared/ui-forms/src/lib/components/filter-by/filter-by.form.ts","./shared/ui-forms/src/lib/components/filter-fields/filter-fields.component.ts","./shared/ui-forms/src/lib/components/filter-fields/filter-fields.component.html","./shared/ui-forms/src/lib/components/filter-fields/filter-fields.form.ts","./shared/ui-forms/src/lib/components/index.ts","./shared/ui-forms/src/lib/components/visible-fields/visible-fields.component.ts","./shared/ui-forms/src/lib/components/visible-fields/visible-fields.component.html","./shared/ui-forms/src/lib/interfaces/field-by.ts","./shared/ui-forms/src/lib/interfaces/field-option.ts","./shared/ui-forms/src/lib/interfaces/index.ts","./shared/ui-forms/src/lib/types/index.ts","./shared/ui-forms/src/lib/types/typed-form-model.ts","./shared/ui-forms/src/lib/types/typed-form-validator.ts","./shared/ui-forms/src/lib/types/typed-form.ts","./shared/ui-forms/src/lib/ui-forms.module.ts","./shared/ui-forms/src/public-api.ts","./shared/util-data/src/index.ts","./shared/util-data/src/lib/base/entity.ts","./shared/util-data/src/lib/base/facade.ts","./shared/util-data/src/lib/base/index.ts","./shared/util-data/src/lib/base/page-meta.ts","./shared/util-data/src/lib/base/paged.ts","./shared/util-data/src/lib/base/store.ts","./shared/util-data/src/lib/base/use-case.ts","./shared/util-data/src/lib/di/container.ts","./shared/util-data/src/lib/di/index.ts","./shared/util-data/src/lib/di/token.ts","./shared/util-data/src/lib/filter/by.ts","./shared/util-data/src/lib/filter/collection.ts","./shared/util-data/src/lib/filter/index.ts","./shared/util-data/src/lib/filter/where.ts","./shared/util-data/src/lib/interfaces/bulk-result.ts","./shared/util-data/src/lib/interfaces/create.ts","./shared/util-data/src/lib/interfaces/find-one-by.ts","./shared/util-data/src/lib/interfaces/find-one.ts","./shared/util-data/src/lib/interfaces/find-params.ts","./shared/util-data/src/lib/interfaces/find.ts","./shared/util-data/src/lib/interfaces/index.ts","./shared/util-data/src/lib/interfaces/page-options.ts","./shared/util-data/src/lib/interfaces/page-params.ts","./shared/util-data/src/lib/interfaces/remove.ts","./shared/util-data/src/lib/interfaces/repository.ts","./shared/util-data/src/lib/interfaces/service.ts","./shared/util-data/src/lib/interfaces/update.ts","./shared/util-data/src/lib/mapper/cast.ts","./shared/util-data/src/lib/mapper/enum-options.ts","./shared/util-data/src/lib/mapper/index.ts","./shared/util-data/src/lib/sort/index.ts","./shared/util-data/src/lib/sort/order.ts","./shared/util-data/src/lib/types/abstract.ts","./shared/util-data/src/lib/types/fn.ts","./shared/util-data/src/lib/types/index.ts","./shared/util-data/src/lib/types/type.ts","./shared/util-data/src/lib/types/where.ts","./shared/util-data/src/public-api.ts"],"sourcesContent":["export * from './public-api'\n","import {AuthService, AuthUser, CreateUser, SignIn} from '@dev/account-domain'\nimport {Store} from '@dev/shared-data-access'\nimport {switchMap, take, tap} from 'rxjs'\n\ninterface AuthState {\n  authUser: AuthUser | null\n  warning: string | null\n  loading: boolean\n}\nexport class AuthFacade extends Store<AuthState> {\n  authUser$ = this.select((state) => state.authUser)\n  warning$ = this.select((state) => state.warning)\n  loading$ = this.select((state) => state.loading)\n\n  get accessToken() {\n    return this.authService.accessToken\n  }\n\n  constructor(private authService: AuthService) {\n    console.log(authService)\n\n    super({authUser: null, warning: null, loading: false})\n  }\n\n  login<T extends SignIn>(signIn: T) {\n    this.setState({loading: true})\n    const authUser$ = this.authService.login(signIn).pipe(\n      switchMap(() => this.authService.me()),\n      take(1)\n    )\n\n    authUser$.subscribe((authUser) => this.setState({authUser, loading: false}))\n  }\n\n  me() {\n    return this.authService.me().pipe(\n      tap((authUser) => this.setState({authUser})),\n      take(1)\n    )\n  }\n\n  register(createUser: CreateUser) {\n    this.setState({loading: true})\n    const createUser$ = this.authService.register(createUser).pipe(take(1))\n\n    createUser$.subscribe((authUser) =>\n      this.setState({authUser, loading: false})\n    )\n  }\n\n  logout() {\n    this.authService.accessToken = null\n    this.setState({authUser: null})\n  }\n}\n","import {Facade} from '@dev/shared-util-data'\nimport {Group} from '@dev/account-domain'\n\nexport class GroupFacade extends Facade<Group> {}\n","export * from './auth.facade'\nexport * from './group.facade'\nexport * from './user.facade'\n","import {UpdatePassword, User, UserService} from '@dev/account-domain'\nimport {Facade} from '@dev/shared-util-data'\nimport {catchError} from 'rxjs'\n\nexport class UserFacade extends Facade<User, UserService> {\n  constructor(service: UserService) {\n    super(service)\n  }\n\n  updatePassword(value: UpdatePassword) {\n    const update$ = this.service.updatePassword(value)\n    update$.pipe(catchError(this.handleError)).subscribe((selected) => {\n      this.setState({selected})\n      this.findOne(value.id)\n    })\n  }\n}\n","export {CreateGroup} from '@dev/account-domain'\n","export {CreateUser} from '@dev/account-domain'\n","export {Group} from '@dev/account-domain'\n","export * from './create-group'\nexport * from './create-user'\nexport * from './group'\nexport * from './sign-in'\nexport * from './update-group'\nexport * from './update-password'\nexport * from './update-user'\nexport * from './user'\n","export {SignIn} from '@dev/account-domain'\n","export {UpdateGroup} from '@dev/account-domain'\n","export {UpdatePassword} from '@dev/account-domain'\n","export {UpdateUser} from '@dev/account-domain'\n","export {User} from '@dev/account-domain'\n","import {\n  SignIn,\n  AuthUser,\n  AccessToken,\n  AuthService,\n  CreateUser,\n} from '@dev/account-domain'\nimport {Http} from '@dev/shared-data-access'\nimport {take, tap} from 'rxjs'\n\nexport class AuthServiceImpl implements AuthService {\n  get accessToken() {\n    return localStorage.getItem('accessToken')\n  }\n  set accessToken(value) {\n    if (value) localStorage.setItem('accessToken', value)\n    else localStorage.removeItem('accessToken')\n  }\n\n  constructor(private readonly http: Http, readonly url: string) {}\n\n  login(value: SignIn) {\n    return this.http.post<AccessToken>(`${this.url}/login`, value).pipe(\n      tap(({accessToken}) => (this.accessToken = accessToken)),\n      take(1)\n    )\n  }\n\n  register(value: CreateUser) {\n    return this.http.post<AuthUser>(`${this.url}/register`, value).pipe(take(1))\n  }\n\n  me() {\n    return this.http.get<AuthUser>(`${this.url}/me`).pipe(take(1))\n  }\n}\n","import {AuthService, CreateUser, SignIn} from '@dev/account-domain'\nimport {of} from 'rxjs'\n\nconst MOCK_USER = {\n  name: 'mock',\n  username: 'username',\n  email: 'mock@user.dev',\n  id: 'mo-ck-id',\n}\nconst MOCK_AUTH = `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1YjU2YTlkNy0wMWMwLTQ4NjEtYmY0MC1jMzMwNjMzY2E3MWQiLCJuYW1lIjoiR3VpbGhlcm1lIiwidXNlcm5hbWUiOiJndWlzZWVrIiwiZW1haWwiOiJlbWFpbEBndWlzZWVrLmRldiIsImlhdCI6MTY5NjEzMzMzMywiZXhwIjoxNjk2MjE5NzMzfQ.SyeK25DlNIJNl3eu8Jabjd0XaQWm-j_WSB8f5MoYEGE`\n\nexport class AuthServiceMock implements AuthService {\n  get accessToken() {\n    return localStorage.getItem('accessToken')\n  }\n  set accessToken(value) {\n    if (value) localStorage.setItem('accessToken', value)\n    else localStorage.removeItem('accessToken')\n  }\n\n  login(value: SignIn) {\n    console.log(`login: `, value)\n    return of({accessToken: MOCK_AUTH})\n  }\n  register(value: CreateUser) {\n    console.log(`register: `, value)\n    return of(MOCK_USER)\n  }\n\n  me() {\n    return of(MOCK_USER)\n  }\n}\n","import {Group, GroupService} from '@dev/account-domain'\nimport {BaseService} from '@dev/shared-data-access'\n\nexport class GroupServiceImpl\n  extends BaseService<Group>\n  implements GroupService {}\n","import {Group, GroupService} from '@dev/account-domain'\nimport {MockService} from '@dev/shared-data-access'\nimport {of} from 'rxjs'\n\nexport class GroupServiceMock\n  extends MockService<Group>\n  implements GroupService\n{\n  create(value: Partial<Group>) {\n    const entity = {\n      ...value,\n      id: crypto.randomUUID(),\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    } as Group\n    this.collection.push(entity)\n    return of(entity)\n  }\n}\n","export * from './auth.service.impl'\nexport * from './auth.service.mock'\nexport * from './group.service.impl'\nexport * from './group.service.mock'\nexport * from './user.service.impl'\nexport * from './user.service.mock'\n","import {UpdatePassword, User, UserService} from '@dev/account-domain'\nimport {BaseService} from '@dev/shared-data-access'\nimport {Observable} from 'rxjs'\n\nexport class UserServiceImpl extends BaseService<User> implements UserService {\n  updatePassword(value: UpdatePassword): Observable<User> {\n    return this.http.put(`${this.url}/password`, value)\n  }\n}\n","import {UpdatePassword, User, UserService} from '@dev/account-domain'\nimport {MockService} from '@dev/shared-data-access'\nimport {of} from 'rxjs'\n\nexport class UserServiceMock extends MockService<User> implements UserService {\n  updatePassword(value: UpdatePassword) {\n    return this.findOne(value.id)\n  }\n\n  create(value: Partial<User>) {\n    const entity = {\n      ...value,\n      id: crypto.randomUUID(),\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    } as User\n    this.collection.push(entity)\n    return of(entity)\n  }\n}\n","import {AuthServiceImpl, AuthServiceMock} from '../infrastructure'\nimport {Http, provideByEnv} from '@dev/shared-data-access'\nimport {AuthService} from '@dev/account-domain'\nimport {AuthFacade} from '../application'\n\nexport function provideAuthService(url = '/api') {\n  return {\n    provide: AuthService,\n    useFactory(http: Http) {\n      return new AuthServiceImpl(http, url)\n    },\n    deps: [Http],\n  }\n}\n\nexport function provideAuthServiceMock() {\n  return {\n    provide: AuthService,\n    useClass: AuthServiceMock,\n  }\n}\n\nexport function provideAuthFacade() {\n  return {\n    provide: AuthFacade,\n    deps: [AuthService],\n  }\n}\n\nexport const provideAuth = provideByEnv(\n  provideAuthService,\n  provideAuthServiceMock,\n  provideAuthFacade()\n)\n","import {Http, provideByEnv, provideServiceMock} from '@dev/shared-data-access'\nimport {GroupServiceImpl, GroupServiceMock} from '../infrastructure'\nimport {Group, GroupService} from '@dev/account-domain'\nimport {GroupFacade} from '../application'\n\nexport function provideGroupService(api: string) {\n  return {\n    provide: GroupService,\n    useFactory(http: Http) {\n      return new GroupServiceImpl(http, api)\n    },\n    deps: [Http],\n  }\n}\n\nexport function provideGroupServiceMock(collection: Group[] = []) {\n  return provideServiceMock(GroupService, GroupServiceMock, collection)\n}\n\nexport function provideGroupFacade() {\n  return {\n    provide: GroupFacade,\n    deps: [GroupService],\n  }\n}\n\nexport const provideGroup = provideByEnv(\n  provideGroupService,\n  provideGroupServiceMock,\n  provideGroupFacade()\n)\n","export * from './auth'\nexport * from './group'\nexport * from './user'\n","import {Http, provideByEnv, provideServiceMock} from '@dev/shared-data-access'\nimport {UserServiceImpl, UserServiceMock} from '../infrastructure'\nimport {User, UserService} from '@dev/account-domain'\nimport {UserFacade} from '../application'\n\nexport function provideUserService(api = '/api/account') {\n  return {\n    provide: UserService,\n    useFactory(http: Http) {\n      return new UserServiceImpl(http, api)\n    },\n    deps: [Http],\n  }\n}\n\nexport function provideUserServiceMock(collection: User[] = []) {\n  return provideServiceMock(UserService, UserServiceMock, collection)\n}\n\nexport function provideUserFacade() {\n  return {\n    provide: UserFacade,\n    deps: [UserService],\n  }\n}\n\nexport const provideUser = provideByEnv(\n  provideUserService,\n  provideUserServiceMock,\n  provideUserFacade()\n)\n","export * from './lib/infrastructure'\nexport * from './lib/application'\nexport * from './lib/providers'\nexport * from './lib/dtos'\n","export * from './public-api'\n","export interface AccessToken {\n  accessToken: string\n}\n","import {AuthUser} from './auth-user'\n\nexport interface AuthRequest extends Request {\n  user: AuthUser\n}\n","export interface AuthUser {\n  id: string\n  name: string\n  email: string\n  username: string\n}\n","export interface CreateGroup {\n  name: string\n  label: string | null\n  permission: number\n}\n","export interface CreateUser {\n  name: string\n  email: string\n  birthdate: Date\n  username: string\n  password: string\n}\n","export * from './access-token'\nexport * from './auth-request'\nexport * from './auth-user'\nexport * from './create-group'\nexport * from './create-user'\nexport * from './sign-in'\nexport * from './update-group'\nexport * from './update-password'\nexport * from './update-user'\n","export class SignIn {\n  username: string\n  password: string\n}\n","import {CreateGroup} from './create-group'\n\nexport interface UpdateGroup extends Partial<CreateGroup> {\n  id: string\n}\n","export interface UpdatePassword {\n  id: string\n  oldPassword: string\n  password: string\n}\n","import {CreateUser} from './create-user'\n\nexport interface UpdateUser extends Partial<CreateUser> {\n  id: string\n}\n","export const enum Permission {\n  '---' = 0b000,\n  '--x' = 0b001,\n  '-w-' = 0b010,\n  '-wx' = 0b011,\n  'r--' = 0b100,\n  'r-x' = 0b101,\n  'rw-' = 0b110,\n  'rwx' = 0b111,\n}\n\nexport interface Group {\n  id: string\n  name: string\n  label: string | null\n  permission: number\n  createdAt: Date\n  updatedAt: Date\n}\n","export * from './group'\nexport * from './user'\n","import {Group} from './group'\n\nexport interface User {\n  id: string\n  name: string\n  email: string\n  birthdate: Date\n  groups: Group[]\n  username: string\n  password: string\n  createdAt: Date\n  updatedAt: Date\n}\n","import {AccessToken, AuthUser, CreateUser, SignIn} from '../dtos'\nimport {Observable} from 'rxjs'\n\nexport abstract class AuthService {\n  abstract get accessToken(): string | null\n  abstract set accessToken(value: string | null)\n\n  abstract login(value: SignIn): Observable<AccessToken>\n  abstract register(value: CreateUser): Observable<AuthUser>\n  abstract me(): Observable<AuthUser>\n}\n","export abstract class CryptoService {\n  abstract hash(value: string, salt?: number): string\n  abstract compare(value: string, encrypted: string): boolean\n}\n","import {CreateGroup, UpdateGroup} from '../dtos'\nimport {Repository} from '@dev/shared-util-data'\nimport {Group} from '../entities'\n\nexport abstract class GroupRepository extends Repository<Group> {\n  abstract override create(value: CreateGroup): Promise<Group>\n  abstract override update(value: UpdateGroup): Promise<Group>\n}\n","import {CreateGroup, UpdateGroup} from '../dtos'\nimport {Service} from '@dev/shared-util-data'\nimport {Group} from '../entities'\nimport {Observable} from 'rxjs'\n\nexport abstract class GroupService extends Service<Group> {\n  abstract override create(value: CreateGroup): Observable<Group>\n  abstract override update(value: UpdateGroup): Observable<Group>\n}\n","export * from './auth.service'\nexport * from './crypto.service'\nexport * from './group.repository'\nexport * from './group.service'\nexport * from './jwt.service'\nexport * from './user.repository'\nexport * from './user.service'\n","interface JwtVerifyOptions {\n  secret?: string\n  publicKey?: string\n}\n\nexport abstract class JwtService {\n  abstract sign<T>(value: T, options?: JwtVerifyOptions): string\n  abstract verify<T extends object>(\n    token: string,\n    options?: JwtVerifyOptions\n  ): T\n}\n","import {CreateUser, UpdateUser} from '../dtos'\nimport {Repository} from '@dev/shared-util-data'\nimport {User} from '../entities'\n\nexport abstract class UserRepository extends Repository<User> {\n  abstract override create<T>(value: CreateUser | T): Promise<User>\n  abstract override update(value: UpdateUser): Promise<User>\n  abstract findByUsernameOrEmail(usernameOrEmail: string): Promise<User | null>\n}\n","import {CreateUser, UpdatePassword, UpdateUser} from '../dtos'\nimport {Service} from '@dev/shared-util-data'\nimport {User} from '../entities'\nimport {Observable} from 'rxjs'\n\nexport abstract class UserService extends Service<User> {\n  abstract override create(value: CreateUser): Observable<User>\n  abstract override update(value: UpdateUser): Observable<User>\n  abstract updatePassword(value: UpdatePassword): Observable<User>\n}\n","import {UseCase} from '@dev/shared-util-data'\nimport {JwtService} from '../ports'\nimport {AuthUser} from '../dtos'\n\nexport class ActivateUserAuthUseCase implements UseCase<string, AuthUser> {\n  constructor(\n    private jwtService: JwtService,\n    private readonly jwtConfig: {secret: string}\n  ) {}\n\n  execute(input: string) {\n    try {\n      return this.jwtService.verify<AuthUser>(input, this.jwtConfig)\n    } catch {\n      throw new Error(`Acesso não autorizado`)\n    }\n  }\n}\n","import {CryptoService, GroupRepository, UserRepository} from '../ports'\nimport {UseCase} from '@dev/shared-util-data'\nimport {Group, User} from '../entities'\nimport {CreateUser} from '../dtos'\n\ninterface CreateUserWihtGroup extends CreateUser {\n  groups: Group[]\n}\n\nexport class CreateUserAccountUseCase\n  implements UseCase<CreateUserWihtGroup, User>\n{\n  constructor(\n    private readonly userRepository: UserRepository,\n    private readonly groupRepository: GroupRepository,\n    private readonly cryptoService: CryptoService\n  ) {}\n\n  async execute(input: CreateUser): Promise<User> {\n    const groups = []\n\n    const group = await this.groupRepository.findOne('permission', 1)\n    if (group) groups.push(group)\n\n    const password = this.cryptoService.hash(input.password)\n\n    try {\n      return await this.userRepository.create({...input, password, groups})\n    } catch {\n      throw new Error(`Erro ao criar usuário ${input.name}`)\n    }\n  }\n}\n","export * from './activate-user-auth'\nexport * from './create-user-account'\nexport * from './sign-in-user-account'\n","import {CryptoService, JwtService, UserRepository} from '../ports'\nimport {UseCase} from '@dev/shared-util-data'\nimport {AccessToken, SignIn} from '../dtos'\n\nexport class SignInUserAccountUseCase implements UseCase<SignIn, AccessToken> {\n  constructor(\n    private readonly userRepository: UserRepository,\n    private readonly cryptoService: CryptoService,\n    private readonly jwtService: JwtService,\n    private readonly jwtConfig: {secret: string}\n  ) {}\n\n  async execute(input: SignIn) {\n    const user = await this.userRepository.findByUsernameOrEmail(input.username)\n    if (!user) throw new Error(`Credenciais inválidas`)\n\n    const verified = this.cryptoService.compare(input.password, user.password)\n    if (!verified) throw new Error(`Credenciais inválidas`)\n\n    const {name, username, email, id} = user\n    const payload = {sub: id, name, username, email}\n    const accessToken = this.jwtService.sign(payload, this.jwtConfig)\n\n    return {accessToken}\n  }\n}\n","export * from './lib/dtos'\nexport * from './lib/ports'\nexport * from './lib/entities'\nexport * from './lib/use-cases'\n","export * from './public-api'\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\nimport {ReactiveFormsModule} from '@angular/forms'\nimport {MatFormFieldModule} from '@angular/material/form-field'\nimport {MatInputModule} from '@angular/material/input'\nimport {MatButtonModule} from '@angular/material/button'\nimport {MatNativeDateModule} from '@angular/material/core'\nimport {MatDatepickerModule} from '@angular/material/datepicker'\nimport {MatIconModule} from '@angular/material/icon'\nimport {SignInComponent, SignUpComponent} from './components'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  declarations: [SignInComponent, SignUpComponent],\n  exports: [SignInComponent, SignUpComponent],\n})\nexport class AccountUiAuthModule {}\n","export * from './sign-in/sign-in.component'\nexport * from './sign-up/sign-up.component'\n","import {\n  Output,\n  Component,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core'\nimport {SignIn, SignInForm} from '../../forms'\nimport {of} from 'rxjs'\n\n@Component({\n  selector: 'dev-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SignInComponent {\n  @ViewChild('username')\n  usernameRef: ElementRef<HTMLInputElement>\n\n  @Output() signIn = new EventEmitter<SignIn>()\n\n  form = new SignInForm()\n\n  message$ = of<string | null>(null)\n\n  focus() {\n    this.usernameRef.nativeElement.focus()\n  }\n\n  onSubmit() {\n    this.form.markAllAsTouched()\n    if (this.form.valid) {\n      this.signIn.emit(this.form.getRawValue())\n    }\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"onSubmit()\">\n  <section>\n    <mat-form-field>\n      <mat-label> Usuário </mat-label>\n      <input\n        matInput\n        name=\"username\"\n        id=\"username\"\n        autocomplete=\"username\"\n        formControlName=\"username\"\n        #username\n        autofocus\n      />\n      <mat-error> Obrigatório </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label> Palavra-chave </mat-label>\n      <input\n        matInput\n        type=\"password\"\n        name=\"password\"\n        id=\"password\"\n        autocomplete=\"current-password\"\n        formControlName=\"password\"\n      />\n      <mat-error> Mínimo 6 caracteres </mat-error>\n    </mat-form-field>\n  </section>\n\n  <p>{{ message$ | async }}</p>\n\n  <footer class=\"row-reverse\">\n    <button mat-stroked-button color=\"primary\">Enviar</button>\n    <button mat-button disabled>Esqueci a senha</button>\n  </footer>\n</form>\n","import {\n  Output,\n  Component,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core'\nimport {SignUp, SignUpForm} from '../../forms'\nimport {of} from 'rxjs'\n\n@Component({\n  selector: 'dev-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SignUpComponent {\n  @ViewChild('name')\n  nameRef: ElementRef<HTMLInputElement>\n\n  @Output() signUp = new EventEmitter<SignUp>()\n\n  form = new SignUpForm()\n\n  message$ = of<string | null>(null)\n\n  focus() {\n    this.nameRef.nativeElement.focus()\n  }\n\n  onSubmit() {\n    this.form.markAllAsTouched()\n    if (this.form.valid) {\n      this.signUp.emit(this.form.getValue())\n    }\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"onSubmit()\">\n  <section>\n    <mat-form-field>\n      <mat-label> Nome </mat-label>\n      <input\n        #name\n        matInput\n        id=\"name\"\n        autofocus\n        autocomplete=\"name\"\n        formControlName=\"name\"\n      />\n      <mat-error> Obrigatório </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label> E-mail </mat-label>\n      <input\n        matInput\n        type=\"email\"\n        id=\"email\"\n        autocomplete=\"email\"\n        formControlName=\"email\"\n      />\n      <mat-error> Obrigatório </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label> Usuário </mat-label>\n      <input\n        matInput\n        id=\"username\"\n        autocomplete=\"username\"\n        formControlName=\"username\"\n      />\n      <mat-error> Obrigatório </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label> Palavra-chave </mat-label>\n      <input\n        matInput\n        type=\"password\"\n        id=\"password\"\n        autocomplete=\"new-password\"\n        formControlName=\"password\"\n      />\n      <mat-error> Mínimo 6 caracteres </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label> Nascimento </mat-label>\n      <input matInput formControlName=\"birthdate\" [matDatepicker]=\"picker\" />\n      <mat-datepicker-toggle\n        matIconSuffix\n        [for]=\"picker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n  </section>\n\n  <p>{{ message$ | async }}</p>\n\n  <footer class=\"row-reverse\">\n    <button mat-stroked-button color=\"primary\">Enviar</button>\n    <button mat-button disabled>Esqueci a senha</button>\n  </footer>\n</form>\n","export * from './sign-in'\nexport * from './sign-up'\n","import {FormControl, Validators} from '@angular/forms'\nimport {TypedFormGroup} from '@dev/shared-ui-forms'\n\nexport interface SignIn {\n  username: string\n  password: string\n}\n\nexport class SignInForm extends TypedFormGroup<SignIn> {\n  constructor() {\n    super({\n      username: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      password: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(6)],\n      }),\n    })\n  }\n}\n","import {FormControl, Validators} from '@angular/forms'\nimport {TypedFormGroup} from '@dev/shared-ui-forms'\n\nexport interface SignUp {\n  name: string\n  email: string\n  birthdate: Date\n  username: string\n  password: string\n}\n\nexport class SignUpForm extends TypedFormGroup<SignUp> {\n  constructor() {\n    super({\n      name: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      email: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      birthdate: new FormControl(null, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      username: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      password: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(6)],\n      }),\n    })\n  }\n}\n","export * from './lib/account-ui-auth.module'\nexport * from './lib/components'\n","import {MediaMatcher} from '@angular/cdk/layout'\nimport {Loader} from '@dev/shared-data-access'\nimport {\n  inject,\n  Component,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core'\nimport {AuthFacade} from '@dev/account-data-access'\nimport {Router} from '@angular/router'\n\n@Component({\n  selector: 'dev-root',\n  template: `\n    <div class=\"app-container\" [class.app-is-mobile]=\"mobileQuery.matches\">\n      <mat-toolbar color=\"primary\" class=\"app-toolbar\">\n        <!--  -->\n\n        <a routerLink=\"/\">\n          <img src=\"./assets/logo.svg\" alt=\"Quero Ser Dev\" />\n        </a>\n        <a class=\"app-name\" routerLink=\"/\">\n          <h1>Quero Ser Dev</h1>\n        </a>\n\n        <!--  -->\n\n        <span class=\"spacer\"></span>\n\n        <!--  -->\n\n        <button\n          mat-button\n          menuItemsLinkActive=\"active\"\n          menuItemsBaseLink=\"/account\"\n          [matMenuTriggerFor]=\"beforeMenu\"\n        >\n          Contas\n        </button>\n        <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n          <a\n            mat-menu-item\n            routerLink=\"/account\"\n            routerLinkActive=\"active\"\n            [routerLinkActiveOptions]=\"{exact: true}\"\n          >\n            <mat-icon>people_alt</mat-icon>\n            <span>Usuários</span>\n          </a>\n          <a\n            mat-menu-item\n            routerLink=\"/account/groups\"\n            routerLinkActive=\"active\"\n            [routerLinkActiveOptions]=\"{exact: true}\"\n          >\n            <mat-icon>groups</mat-icon>\n            <span>Grupos</span>\n          </a>\n        </mat-menu>\n\n        <ng-container *ngIf=\"authFacade.authUser$ | async as auth\">\n          <button mat-icon-button [matMenuTriggerFor]=\"accountMenu\">\n            <mat-icon>account_circle</mat-icon>\n          </button>\n          <mat-menu #accountMenu=\"matMenu\" xPosition=\"before\">\n            <button mat-menu-item disabled>\n              <small>logado como</small>\n              <br />\n              {{ auth.email }}\n            </button>\n            <mat-divider></mat-divider>\n            <button mat-menu-item (click)=\"logout()\">\n              <mat-icon>logout</mat-icon>\n              <span>Logout</span>\n            </button>\n          </mat-menu>\n        </ng-container>\n      </mat-toolbar>\n\n      <mat-sidenav-container\n        class=\"app-sidenav-container\"\n        [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\"\n      >\n        <mat-sidenav-content>\n          <router-outlet />\n          <dev-loader *ngIf=\"loader.active$ | async\" />\n        </mat-sidenav-content>\n      </mat-sidenav-container>\n    </div>\n  `,\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  loader = inject(Loader)\n\n  media = inject(MediaMatcher)\n  changeDetectorRef = inject(ChangeDetectorRef)\n\n  authFacade = inject(AuthFacade)\n  router = inject(Router)\n\n  mobileQuery\n\n  constructor() {\n    this.mobileQuery = this.media.matchMedia('(max-width: 600px)')\n    const _mobileQueryListener = () => this.changeDetectorRef.detectChanges()\n    this.mobileQuery.addListener(_mobileQueryListener)\n  }\n\n  logout() {\n    this.authFacade.logout()\n    this.router.navigate(['/auth'])\n  }\n}\n","import {HttpRequest, HttpHandler, HttpInterceptor} from '@angular/common/http'\nimport {Loader} from '@dev/shared-data-access'\nimport {Injectable} from '@angular/core'\nimport {finalize} from 'rxjs'\n\n@Injectable()\nexport class AppInterceptor implements HttpInterceptor {\n  constructor(private readonly loader: Loader) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler) {\n    this.loader.activate()\n    return next.handle(request).pipe(\n      // delay(300),\n      finalize(() => this.loader.deActivate())\n    )\n  }\n}\n","import {provideAuth, provideGroup, provideUser} from '@dev/account-data-access'\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\nimport {provideHttp, provideLoader} from '@dev/shared-data-access'\nimport {BrowserModule} from '@angular/platform-browser'\nimport {AccountUiAuthModule} from '@dev/account-ui-auth'\nimport {registerLocaleData} from '@angular/common'\nimport {LOCALE_ID, NgModule} from '@angular/core'\nimport {UiBaseModule} from '@dev/shared-ui-base'\nimport {RouterModule} from '@angular/router'\nimport BR from '@angular/common/locales/extra/br'\nimport pt from '@angular/common/locales/pt'\nimport {\n  HttpClient,\n  HttpClientModule,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http'\nimport {AuthInterceptor} from './auth/auth.interceptor'\nimport {AuthComponent} from './auth/auth.component'\nimport {AppInterceptor} from './app.interceptor'\nimport {AppComponent} from './app.component'\nimport {LoaderComponent} from './loader'\nimport {SharedMaterial} from './shared'\nimport {appRoutes} from './app.routes'\nimport {env} from '../envs/env'\n\nregisterLocaleData(pt, 'pt-BR', BR)\n\n@NgModule({\n  declarations: [AppComponent, LoaderComponent, AuthComponent],\n  imports: [\n    UiBaseModule,\n    BrowserModule,\n    HttpClientModule,\n    AccountUiAuthModule,\n    SharedMaterial.forApp(),\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes, {\n      useHash: true,\n      anchorScrolling: 'enabled',\n      // enableTracing: !env.production,\n      initialNavigation: 'enabledBlocking',\n    }),\n  ],\n  providers: [\n    provideHttp(HttpClient),\n    provideLoader(),\n    provideUser(env.level, env.api.account),\n    provideGroup(env.level, env.api.accountGroups),\n    provideAuth(env.level, env.api.accountAuth),\n    {\n      provide: LOCALE_ID,\n      useValue: 'pt-BR',\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {AuthComponent} from './auth/auth.component'\nimport {authGuard} from './auth/auth.guard'\nimport {Route} from '@angular/router'\n\nexport const appRoutes: Route[] = [\n  {\n    path: 'account',\n    canActivateChild: [authGuard],\n    loadChildren: () =>\n      import('@dev/account-feature').then((m) => m.AccountFeatureModule),\n  },\n  {\n    path: 'auth',\n    component: AuthComponent,\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'account',\n  },\n]\n","import {BehaviorSubject, Subject, debounceTime, filter, takeUntil} from 'rxjs'\nimport {AuthFacade, CreateUser} from '@dev/account-data-access'\nimport {SignInComponent, SignUpComponent} from '@dev/account-ui-auth'\nimport {Router} from '@angular/router'\nimport {\n  OnInit,\n  inject,\n  ViewChild,\n  Component,\n  ChangeDetectionStrategy,\n} from '@angular/core'\n\n@Component({\n  selector: 'dev-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthComponent implements OnInit {\n  router = inject(Router)\n\n  @ViewChild(SignInComponent)\n  signInComponent: SignInComponent\n\n  @ViewChild(SignUpComponent)\n  signUpComponent: SignUpComponent\n\n  #tabIndex = new BehaviorSubject(0)\n  tabIndex$ = this.#tabIndex.asObservable()\n\n  authFacade = inject(AuthFacade)\n\n  #destroy = new Subject<void>()\n\n  ngOnInit() {\n    this.authFacade.authUser$\n      .pipe(\n        debounceTime(600),\n        takeUntil(this.#destroy),\n        filter((authUser) => !!authUser)\n      )\n      .subscribe((authUser) => {\n        if (authUser) {\n          this.router.navigate(['/account'])\n          this.#destroy.complete()\n          this.#destroy.next()\n        }\n      })\n  }\n\n  onSelectedIndexChange(index: number) {\n    this.#tabIndex.next(index)\n  }\n\n  onTabChanged() {\n    if (this.#tabIndex.value) {\n      this.signUpComponent.focus()\n    } else {\n      this.signInComponent.focus()\n    }\n  }\n\n  onSignUp<T extends CreateUser>(createUser: T) {\n    this.authFacade.register(createUser)\n    this.onSelectedIndexChange(0)\n  }\n}\n","<mat-card>\n  <mat-tab-group\n    dynamicHeight\n    [selectedIndex]=\"tabIndex$ | async\"\n    (selectedIndexChange)=\"onSelectedIndexChange($event)\"\n    (animationDone)=\"onTabChanged()\"\n  >\n    <mat-tab label=\"Login\">\n      <dev-sign-in (signIn)=\"authFacade.login($event)\"></dev-sign-in>\n    </mat-tab>\n    <mat-tab label=\"Nova conta\">\n      <dev-sign-up (signUp)=\"onSignUp($event)\"></dev-sign-up>\n    </mat-tab>\n  </mat-tab-group>\n</mat-card>\n","import {CanActivateFn, Router} from '@angular/router'\nimport {AuthFacade} from '@dev/account-data-access'\nimport {catchError, map, take} from 'rxjs'\nimport {inject} from '@angular/core'\n\nexport const authGuard: CanActivateFn = () => {\n  const router = inject(Router)\n  const authFacade = inject(AuthFacade)\n\n  return authFacade.me().pipe(\n    catchError((err, user) => {\n      if (err) {\n        router.navigate(['/', 'auth'])\n        throw err\n      }\n      return user\n    }),\n    map((user) => !!user),\n    take(1)\n  )\n}\n","import {HttpRequest, HttpHandler, HttpInterceptor} from '@angular/common/http'\nimport {AuthFacade} from '@dev/account-data-access'\nimport {Injectable} from '@angular/core'\nimport {Router} from '@angular/router'\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(\n    private readonly router: Router,\n    private authFacade: AuthFacade\n  ) {}\n\n  intercept(req: HttpRequest<unknown>, next: HttpHandler) {\n    if (!this.authFacade.accessToken) {\n      this.router.navigate(['/', 'auth'])\n      this.authFacade.logout()\n    }\n\n    const bearerToken = `Bearer ${this.authFacade.accessToken}`\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', bearerToken),\n    })\n\n    return next.handle(authRequest)\n  }\n}\n","export * from './loader.component'\n","import {ChangeDetectionStrategy, Component} from '@angular/core'\n\n@Component({\n  selector: 'dev-loader',\n  template: ` <div class=\"sky\"></div> `,\n  styleUrls: ['./loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {}\n","export * from './material'\n","import {MatMenuModule} from '@angular/material/menu'\nimport {MatSidenavModule} from '@angular/material/sidenav'\nimport {MatDividerModule} from '@angular/material/divider'\nimport {MatToolbarModule} from '@angular/material/toolbar'\nimport {MatCardModule} from '@angular/material/card'\nimport {MatTabsModule} from '@angular/material/tabs'\nimport {MatButtonModule} from '@angular/material/button'\nimport {MatIconModule} from '@angular/material/icon'\nimport {LayoutModule} from '@angular/cdk/layout'\n\nexport class SharedMaterial {\n  static forApp() {\n    return [\n      LayoutModule,\n      MatDividerModule,\n      MatSidenavModule,\n      MatMenuModule,\n      MatCardModule,\n      MatTabsModule,\n      MatToolbarModule,\n      MatButtonModule,\n      MatIconModule,\n    ]\n  }\n}\n","export const env = {\n  production: false,\n  level: 'testing',\n  api: {\n    account: [],\n    accountAuth: '',\n    accountGroups: [],\n  },\n}\n","import {platformBrowserDynamic} from '@angular/platform-browser-dynamic'\nimport {AppModule} from './app/app.module'\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err))\n","export * from './public-api'\n","export * from './loader'\nexport * from './store'\n","import {Store} from './store'\n\ninterface LoaderState {\n  active: boolean\n}\n\nexport class Loader extends Store<LoaderState> {\n  active$ = this.select((state) => state.active)\n\n  constructor() {\n    super({active: false})\n  }\n\n  activate() {\n    this.setState({active: true})\n  }\n\n  deActivate() {\n    this.setState({active: false})\n  }\n}\n","import {BehaviorSubject, distinctUntilChanged, map} from 'rxjs'\n\nexport abstract class Store<T> {\n  #state: BehaviorSubject<T>\n\n  protected get state(): T {\n    return this.#state.getValue()\n  }\n\n  constructor(initialState: T) {\n    const state = Object.freeze(initialState)\n    this.#state = new BehaviorSubject<T>(state)\n  }\n\n  protected select<K>(mapFn: (state: T) => K) {\n    return this.#state.asObservable().pipe(\n      map((state: T) => mapFn(state)),\n      distinctUntilChanged()\n    )\n  }\n\n  protected setState(newState: Partial<T>) {\n    this.#state.next({\n      ...this.state,\n      ...newState,\n    })\n  }\n}\n","import {Fn} from '@dev/shared-util-data'\nimport {Env, ProvideSvc} from './types'\nimport {Loader} from './application'\nimport {Http} from './ports'\n\nexport function provideHttp<T>(http: T) {\n  return {\n    provide: Http,\n    useClass: http,\n  }\n}\n\nexport function provideLoader() {\n  return {\n    provide: Loader,\n  }\n}\n\nexport function provideByEnv<T>(\n  prod: ProvideSvc<T | unknown>,\n  dev: ProvideSvc<T> | Fn,\n  ...others: ReturnType<ProvideSvc<unknown>>[]\n) {\n  return (level: Env | string, api: string | unknown[]) => {\n    switch (level) {\n      case 'staging':\n      case 'production':\n      case 'development':\n        return [prod(api as string), ...others]\n      case 'testing':\n      default:\n        return [dev(api as T[] | void), ...others]\n    }\n  }\n}\n","import {\n  Paged,\n  Where,\n  Service,\n  BulkResult,\n  FindParams,\n} from '@dev/shared-util-data'\nimport {Http} from '../ports'\n\nexport abstract class BaseService<T extends object> implements Service<T> {\n  constructor(protected readonly http: Http<T>, readonly url: string) {}\n\n  find({options}: FindParams<T> = {options: {}}) {\n    return this.http.get<Paged<T>>(this.url, {params: options})\n  }\n\n  count(where: Where<T> = {}) {\n    return this.http.post<number>(`${this.url}/count`, where)\n  }\n\n  filter({where = {}, options}: FindParams<T> = {where: {}, options: {}}) {\n    return this.http.post<Paged<T>, Where<T>>(`${this.url}/filter`, where, {\n      params: options,\n    })\n  }\n\n  create(value: Partial<T>) {\n    return this.http.post<T, Partial<T>>(this.url, value)\n  }\n\n  update(value: Partial<T>) {\n    return this.http.put<T, Partial<T>>(this.url, value)\n  }\n\n  remove(id: string) {\n    return this.http.delete<T>(`${this.url}/${id}`)\n  }\n\n  removeBulk(...ids: string[]) {\n    return this.http.delete<BulkResult>(`${this.url}/bulk`, {params: {ids}})\n  }\n\n  findOne(value: string) {\n    return this.http.delete<T>(`${this.url}/${value}`)\n  }\n}\n","import {InMemoryDbService, RequestInfo} from 'angular-in-memory-web-api'\nimport {Observable, of} from 'rxjs'\n\nexport class InMemoryService<T extends object> implements InMemoryDbService {\n  createDb(reqInfo?: RequestInfo, ...items: T[]): Observable<T[]> {\n    console.log(reqInfo)\n    return of([...items])\n  }\n\n  genId() {\n    return crypto.randomUUID()\n  }\n}\n","export * from './base-service'\nexport * from './in-memory.service'\nexport * from './indexed-db.service.impl'\nexport * from './mock.service'\n","// function arrayBufferToBlob<B extends ArrayBuffer, T extends string>(\n//   buffer: B,\n//   type: T\n// ) {\n//   return new Blob([buffer], {type: type})\n// }\n\n// function blobToArrayBuffer(blob: Blob) {\n//   return new Promise<ArrayBuffer>((resolve, reject) => {\n//     const reader = new FileReader()\n//     reader.addEventListener('loadend', () => {\n//       if (reader.result instanceof ArrayBuffer) {\n//         resolve(reader.result)\n//       }\n//     })\n//     reader.addEventListener('error', reject)\n//     reader.readAsArrayBuffer(blob)\n//   })\n// }\n\nclass MissingStoresError extends Error {\n  constructor(readonly db: IDBDatabase) {\n    super('Missing stores')\n  }\n}\n\nexport class DBClosedError extends Error {\n  readonly code = 'DBClosed'\n  constructor(dbName: string) {\n    super(`IndexedDB database '${dbName}' is closed.`)\n  }\n}\n\nexport class IndexedDbService {\n  #database: IDBDatabase | null\n\n  readonly #pendingTransactions: IDBTransaction[] = []\n\n  constructor(database: IDBDatabase, private readonly name: string) {\n    this.#database = database\n  }\n\n  static async create(\n    name: string,\n    version: number | undefined,\n    stores: string[]\n  ) {\n    const database = await IndexedDbService.#openDatabase(name, version, stores)\n    return new IndexedDbService(database, name)\n  }\n\n  static async #openDatabase(\n    name: string,\n    version: number | undefined,\n    stores: string[]\n  ) {\n    try {\n      return await IndexedDbService.#doOpenDatabase(name, version, stores)\n    } catch (err) {\n      if (err instanceof MissingStoresError) {\n        console.info(`Attempting to recreate the IndexedDB once.`, name)\n\n        try {\n          // Try to delete the db\n          await IndexedDbService.#deleteDatabase(err.db)\n        } catch (error) {\n          console.error(\n            `Error while deleting the IndexedDB`,\n            error\n            // getErrorMessage(error)\n          )\n          throw error\n        }\n\n        return await IndexedDbService.#doOpenDatabase(name, version, stores)\n      }\n\n      throw err\n    }\n  }\n\n  static #deleteDatabase(indexedDB: IDBDatabase) {\n    return new Promise<void>((c, e) => {\n      // Close any opened connections\n      indexedDB.close()\n\n      // Delete the db\n      const deleteRequest = window.indexedDB.deleteDatabase(indexedDB.name)\n      deleteRequest.onerror = () => e(deleteRequest.error)\n      deleteRequest.onsuccess = () => c()\n    })\n  }\n\n  static #doOpenDatabase(\n    name: string,\n    version: number | undefined,\n    stores: string[]\n  ): Promise<IDBDatabase> {\n    return new Promise((c, e) => {\n      const request = window.indexedDB.open(name, version)\n      request.onerror = () => e(request.error)\n      request.onsuccess = () => {\n        const db = request.result\n        for (const store of stores) {\n          if (!db.objectStoreNames.contains(store)) {\n            console.error(\n              `Error while opening IndexedDB. Could not find '${store}'' object store`\n            )\n            e(new MissingStoresError(db))\n            return\n          }\n        }\n        c(db)\n      }\n      request.onupgradeneeded = () => {\n        const db = request.result\n        for (const store of stores) {\n          if (!db.objectStoreNames.contains(store)) {\n            db.createObjectStore(store)\n          }\n        }\n      }\n    })\n  }\n\n  hasPendingTransactions(): boolean {\n    return this.#pendingTransactions.length > 0\n  }\n\n  close(): void {\n    if (this.#pendingTransactions.length) {\n      this.#pendingTransactions\n        .splice(0, this.#pendingTransactions.length)\n        .forEach((transaction) => transaction.abort())\n    }\n    this.#database?.close()\n    this.#database = null\n  }\n\n  runInTransaction<T>(\n    store: string,\n    transactionMode: IDBTransactionMode,\n    dbRequestFn: (store: IDBObjectStore) => IDBRequest<T>[]\n  ): Promise<T[]>\n  runInTransaction<T>(\n    store: string,\n    transactionMode: IDBTransactionMode,\n    dbRequestFn: (store: IDBObjectStore) => IDBRequest<T>\n  ): Promise<T>\n  async runInTransaction<T>(\n    store: string,\n    transactionMode: IDBTransactionMode,\n    dbRequestFn: (store: IDBObjectStore) => IDBRequest<T> | IDBRequest<T>[]\n  ): Promise<T | T[]> {\n    if (!this.#database) {\n      throw new DBClosedError(this.name)\n    }\n    const transaction = this.#database.transaction(store, transactionMode)\n    this.#pendingTransactions.push(transaction)\n    return new Promise<T | T[]>((c, e) => {\n      transaction.oncomplete = () => {\n        if (Array.isArray(request)) {\n          c(request.map((r) => r.result))\n        } else {\n          c(request.result)\n        }\n      }\n      transaction.onerror = () => e(transaction.error)\n      transaction.onabort = () => e(transaction.error)\n      const request = dbRequestFn(transaction.objectStore(store))\n    }).finally(() =>\n      this.#pendingTransactions.splice(\n        this.#pendingTransactions.indexOf(transaction),\n        1\n      )\n    )\n  }\n\n  async getKeyValues<V>(\n    store: string,\n    isValid: (value: unknown) => value is V\n  ): Promise<Map<string, V>> {\n    if (!this.#database) {\n      throw new DBClosedError(this.name)\n    }\n    const transaction = this.#database.transaction(store, 'readonly')\n    this.#pendingTransactions.push(transaction)\n    return new Promise<Map<string, V>>((resolve) => {\n      const items = new Map<string, V>()\n\n      const objectStore = transaction.objectStore(store)\n\n      // Open a IndexedDB Cursor to iterate over key/values\n      const cursor = objectStore.openCursor()\n      if (!cursor) {\n        return resolve(items) // this means the `ItemTable` was empty\n      }\n\n      // Iterate over rows of `ItemTable` until the end\n      cursor.onsuccess = () => {\n        if (cursor.result) {\n          // Keep cursor key/value in our map\n          if (isValid(cursor.result.value)) {\n            items.set(cursor.result.key.toString(), cursor.result.value)\n          }\n\n          // Advance cursor to next row\n          cursor.result.continue()\n        } else {\n          resolve(items) // reached end of table\n        }\n      }\n\n      // Error handlers\n      const onError = (error: Error | null) => {\n        // console.error(`IndexedDB getKeyValues(): ${toErrorMessage(error, true)}`);\n        console.error(`IndexedDB getKeyValues(): ${error}`)\n\n        resolve(items)\n      }\n      cursor.onerror = () => onError(cursor.error)\n      transaction.onerror = () => onError(transaction.error)\n    }).finally(() =>\n      this.#pendingTransactions.splice(\n        this.#pendingTransactions.indexOf(transaction),\n        1\n      )\n    )\n  }\n}\n\n// const db = IndexedDbService.create('db', undefined, ['store1'])\n// console.log(db)\n","import {SvcMockOf} from '../types'\nimport {Observable, of} from 'rxjs'\nimport {\n  Entity,\n  FindParams,\n  PageMeta,\n  Paged,\n  Service,\n  Where,\n  where,\n} from '@dev/shared-util-data'\n\nexport function provideServiceMock<E extends Entity, B>(\n  base: B,\n  impl: SvcMockOf<E>,\n  collection: E[]\n) {\n  return {\n    provide: base,\n    useFactory() {\n      return new impl(collection)\n    },\n  }\n}\n\nexport abstract class MockService<\n  T extends Entity & object\n> extends Service<T> {\n  constructor(readonly collection: T[] = []) {\n    super()\n  }\n\n  find(params: FindParams<T> = {where: {}, options: {}}) {\n    const {\n      skip = 0,\n      take = 10,\n      order,\n      sort = 'createdAt',\n    } = params.options ?? {}\n\n    const ord = order === 'ASC' ? 1 : -1\n    console.log(this.collection)\n\n    const entities = this.collection\n      // .filter(where(params.where ?? {}))\n      .slice(skip, skip + take)\n      .sort((a, b) => {\n        return a[sort as keyof T] > b[sort as keyof T] ? ord : ord * -1\n      })\n\n    const options = params.options ?? {}\n\n    const itemCount = entities.length\n\n    const pageMetaDto = new PageMeta({itemCount, options})\n\n    return of(new Paged(entities, pageMetaDto))\n  }\n\n  filter(params: FindParams<T>): Observable<Paged<T>> {\n    return this.find(params)\n  }\n\n  count(params: Where<T>) {\n    const entities = this.collection.filter(where(params))\n\n    return of(entities.length)\n  }\n\n  // abstract override create(value: Partial<T>): Observable<T>\n\n  update(value: Partial<T>) {\n    const index = this.collection.findIndex((item) => item.id === value.id)\n    const entity = {...this.collection[index], ...value}\n    this.collection[index] = entity\n    return of(entity)\n  }\n\n  remove(id: string) {\n    const index = this.collection.findIndex((item) => item.id === id)\n    const entity = this.collection[index]\n    this.collection.splice(index, 1)\n    return of(entity)\n  }\n\n  removeBulk(...ids: string[]) {\n    const {length} = ids.map((id) => this.remove(id))\n    return of({affected: length})\n  }\n\n  findOne(id: string) {\n    const user = this.collection.find((item) => item.id === id)\n    if (!user) throw new Error('not found')\n    return of(user ?? null)\n  }\n}\n","import {Observable} from 'rxjs'\n\nabstract class Http<T = unknown> {\n  constructor(protected readonly baseUrl: string) {}\n\n  protected abstract request<R = T, D = unknown>(\n    method: string,\n    path: string,\n    data?: T | D\n  ): Observable<R>\n\n  abstract get<R>(path: string, config?: Partial<RequestConfig>): Observable<R>\n\n  abstract post<R, D = unknown>(\n    path: string,\n    data: D,\n    options?: Partial<RequestConfig>\n  ): Observable<R>\n\n  abstract put<R, D = unknown>(\n    path: string,\n    data: D,\n    options?: Partial<RequestConfig>\n  ): Observable<R>\n\n  abstract delete<R, D = unknown>(\n    path: string,\n    data?: D,\n    options?: Partial<RequestConfig>\n  ): Observable<R>\n}\n\ninterface ResponseTypeMap<T = void> {\n  arrayBuffer: ArrayBuffer\n  text: string\n  blob: Blob\n  json: T\n}\n\ninterface RequestConfig extends Omit<RequestInit, 'method'> {\n  responseType: keyof ResponseTypeMap\n  params?: object\n}\n\ntype FetchResponse<T, C extends RequestConfig> =\n  | ResponseTypeMap<T>[C extends keyof ResponseTypeMap\n      ? C['responseType']\n      : 'json']\n\nexport {Http}\nexport type {ResponseTypeMap, RequestConfig, FetchResponse}\n","export * from './http'\n","export type Env = 'development' | 'testing' | 'staging' | 'production'\n","export * from './env'\nexport * from './provide-svc.ts'\nexport * from './svc-of'\n","export type ProvideSvc<T> = (api?: any) => {\n  provide: T\n  useFactory?(...params: unknown[]): T\n  useClass?(...params: unknown[]): T\n  deps?: unknown[]\n}\n","import {Service} from '@dev/shared-util-data'\n\nexport type SvcOf<E extends object, T = unknown> = new (repo: Service<E>) => T\n\nexport type SvcMockOf<E extends object, T = unknown> = new (\n  collection: E[]\n) => T\n","export * from './lib/infrastructure'\nexport * from './lib/data-access'\nexport * from './lib/application'\nexport * from './lib/ports'\nexport * from './lib/types'\n","export * from './public-api'\n","import {takeUntilDestroyed} from '@angular/core/rxjs-interop'\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog'\nimport {Entity, Facade, Order, Where} from '@dev/shared-util-data'\nimport {MatTableDataSource} from '@angular/material/table'\nimport {MatPaginator} from '@angular/material/paginator'\nimport {MatSnackBar} from '@angular/material/snack-bar'\nimport {DestroyRef, Directive} from '@angular/core'\nimport {MatSort} from '@angular/material/sort'\nimport {FormControl} from '@angular/forms'\nimport {FormDialog} from './form-dialog'\nimport {SelectionMenu} from '../components'\nimport {ListSelectable} from './list-selectable'\n\ninterface FieldOption {\n  text: string\n  value: string\n}\n\nexport type Columns<T extends object> = ('select' | 'actions' | keyof T)[]\n\n@Directive()\nexport abstract class FeatureContainer<T extends Entity> {\n  abstract readonly columns: FormControl<Columns<T> | null>\n\n  abstract readonly columnList: FieldOption[]\n\n  abstract readonly dialog: MatDialog\n  abstract readonly facade: Facade<T>\n\n  abstract readonly destroyRef: DestroyRef\n  abstract readonly paginator: MatPaginator\n  abstract readonly snackBar: MatSnackBar\n  abstract readonly sort: MatSort\n\n  list?: ListSelectable<T>\n\n  readonly dataSource = new MatTableDataSource<T>()\n\n  get meta$() {\n    return this.facade.meta$\n  }\n\n  selection = new SelectionMenu<T>(true, [])\n\n  initialize() {\n    const pagination$ = (\n      this.list ? this.list.paginator : this.paginator\n    ).page.pipe(takeUntilDestroyed(this.destroyRef))\n\n    const sorted$ = (this.list ? this.list.sort : this.sort).sortChange.pipe(\n      takeUntilDestroyed(this.destroyRef)\n    )\n\n    const items$ = this.facade.data$.pipe(takeUntilDestroyed(this.destroyRef))\n\n    const warnings$ = this.facade.warning$.pipe(\n      takeUntilDestroyed(this.destroyRef)\n    )\n\n    pagination$.subscribe((value) => {\n      const order = this.sort.direction ? Order.ASC : Order.DESC\n      this.update(this.sort.active, order, value.pageIndex)\n    })\n\n    sorted$.subscribe((value) => {\n      const order = value.direction ? Order.ASC : Order.DESC\n      this.update(value.active, order, this.paginator.pageIndex)\n    })\n\n    items$.subscribe((data) => {\n      this.selection.clear()\n      this.dataSource.paginator = this.paginator\n      this.dataSource.sort = this.sort\n      this.dataSource.data = data\n    })\n\n    warnings$.subscribe((warnings) => {\n      if (warnings) this.snackBar.open(warnings, 'OK', {duration: 6000})\n    })\n\n    this.facade.find()\n  }\n\n  get columnsHasSelect() {\n    const columns = this.columns.value ?? []\n    return columns.includes('select')\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length\n    const numRows = this.dataSource.data.length\n    return numSelected === numRows\n  }\n\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear()\n      return\n    }\n\n    this.selection.select(...this.dataSource.data)\n  }\n\n  abstract openCreateDialog(): MatDialogRef<FormDialog<any>>\n  abstract openUpdateDialog(data: T): MatDialogRef<FormDialog<any>>\n\n  onCreate() {\n    const ref = this.openCreateDialog()\n    ref.componentInstance.message$ = this.facade.warning$\n    ref.componentInstance.form.submitted$.subscribe((value) => {\n      if (value) {\n        this.facade.create(value)\n        ref.close()\n      }\n    })\n  }\n\n  onUpdate(data: T) {\n    const ref = this.openUpdateDialog(data)\n    ref.componentInstance.message$ = this.facade.warning$\n    ref.componentInstance.form.submitted$.subscribe((value) => {\n      if (value) {\n        this.facade.update(value)\n        ref.close()\n      }\n    })\n  }\n\n  filter(where: Where<T>) {\n    this.facade.filter({where})\n  }\n\n  update(sort: string, order: Order, page: number) {\n    this.facade.find({options: {page: page + 1, sort, order}})\n  }\n\n  remove(id: string) {\n    this.facade.remove(id)\n  }\n\n  removeBulk() {\n    if (this.selection.hasValue()) {\n      const ids = this.selection.selected.map(({id}) => id)\n      this.facade.removeBulk(ids)\n      this.selection.clear()\n    }\n  }\n}\n","import {TypedFormGroup} from '@dev/shared-ui-forms'\nimport {of} from 'rxjs'\n\nexport abstract class FormDialog<T extends object> {\n  abstract form: TypedFormGroup<T>\n\n  message$ = of<string | null>(null)\n}\n","export * from './feature-container'\nexport * from './form-dialog'\nexport * from './list-selectable'\n","import {MatTableDataSource} from '@angular/material/table'\nimport {SelectionMenu} from '../components'\nimport {MatPaginator} from '@angular/material/paginator'\nimport {MatSort} from '@angular/material/sort'\n\nexport abstract class ListSelectable<T> {\n  abstract selection: SelectionMenu<T>\n  abstract dataSource: MatTableDataSource<T>\n\n  abstract paginator: MatPaginator\n  abstract sort: MatSort\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length\n    const numRows = this.dataSource.data.length\n    return numSelected === numRows\n  }\n\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear()\n      return\n    }\n\n    this.selection.select(...this.dataSource.data)\n  }\n}\n","export * from './selection-menu/selection-menu.component'\nexport * from './selection-menu/selection-menu'\n","import {Input, Component, ContentChild} from '@angular/core'\nimport {MatMenu} from '@angular/material/menu'\nimport {SelectionMenu} from './selection-menu'\n\n@Component({\n  selector: 'dev-selection-menu',\n  template: `\n    <button\n      mat-stroked-button\n      [disabled]=\"selection.hasValue() === false\"\n      [matMenuTriggerFor]=\"menu\"\n    >\n      <mat-icon>checklist</mat-icon>\n      <span>Com selecionados</span>\n    </button>\n    <ng-content select=\"mat-menu\"></ng-content>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n})\nexport class SelectionMenuComponent<T> {\n  @ContentChild(MatMenu)\n  menu: MatMenu\n\n  @Input({required: true})\n  selection!: SelectionMenu<T>\n}\n","import {SelectionModel} from '@angular/cdk/collections'\nimport {map} from 'rxjs'\n\nexport class SelectionMenu<T> extends SelectionModel<T> {\n  get selected$() {\n    return this.changed.asObservable().pipe(map(() => this.selected))\n  }\n}\n","export * from './menu-items-link-active.directive'\n","import {Input, Directive, DestroyRef, ElementRef} from '@angular/core'\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop'\nimport {NavigationEnd, Router} from '@angular/router'\nimport {filter} from 'rxjs'\n\n@Directive({\n  selector: '[devMenuLinkActive],[menuItemsLinkActive]',\n})\nexport class MenuItemsLinkActiveDirective {\n  @Input({required: true})\n  menuItemsBaseLink = ''\n\n  @Input({required: true})\n  menuItemsLinkActive = 'active'\n\n  constructor(\n    router: Router,\n    destroyRef: DestroyRef,\n    elementRef: ElementRef<HTMLButtonElement>\n  ) {\n    router.events\n      .pipe(\n        filter((e) => e instanceof NavigationEnd),\n        takeUntilDestroyed(destroyRef)\n      )\n      .subscribe(() => {\n        if (router.url.startsWith(this.menuItemsBaseLink)) {\n          elementRef.nativeElement.classList.add(\n            this.menuItemsLinkActive ?? 'active'\n          )\n        } else {\n          elementRef.nativeElement.classList.remove(\n            this.menuItemsLinkActive ?? 'active'\n          )\n        }\n      })\n  }\n}\n","export * from './shared-material'\n","import {MatButtonModule} from '@angular/material/button'\nimport {MatTableModule} from '@angular/material/table'\nimport {MatToolbarModule} from '@angular/material/toolbar'\nimport {MatIconModule} from '@angular/material/icon'\nimport {MatMenuModule} from '@angular/material/menu'\nimport {MatListModule} from '@angular/material/list'\nimport {MatDialogModule} from '@angular/material/dialog'\nimport {MatSnackBarModule} from '@angular/material/snack-bar'\nimport {MatCardModule} from '@angular/material/card'\nimport {MatSortModule} from '@angular/material/sort'\nimport {MatPaginatorModule} from '@angular/material/paginator'\nimport {NgModule} from '@angular/core'\n\n@NgModule({\n  exports: [\n    MatButtonModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatListModule,\n    MatIconModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatSortModule,\n    MatPaginatorModule,\n  ],\n})\nexport class SharedMaterial {}\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\nimport {MatButtonModule} from '@angular/material/button'\nimport {MatMenuModule} from '@angular/material/menu'\nimport {MatIconModule} from '@angular/material/icon'\nimport {SelectionMenuComponent} from './components'\nimport {MenuItemsLinkActiveDirective} from './directives'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n  ],\n  declarations: [SelectionMenuComponent, MenuItemsLinkActiveDirective],\n  exports: [SelectionMenuComponent, MenuItemsLinkActiveDirective],\n})\nexport class UiBaseModule {}\n","export * from './lib/ui-base.module'\nexport * from './lib/components'\nexport * from './lib/modules'\nexport * from './lib/base'\n","export * from './public-api'\n","export * from './typed-form-array'\nexport * from './typed-form-group'\n","import {FormArray} from '@angular/forms'\nimport {TypedForm} from '../types'\n\nexport abstract class TypedFormArray<T> extends FormArray<TypedForm<T>> {}\n","import {FormGroup} from '@angular/forms'\nimport {TypedFormModel} from '../types'\nimport {Subject} from 'rxjs'\n\nexport class TypedFormGroup<T extends object> extends FormGroup<\n  TypedFormModel<T>\n> {\n  #submitted = new Subject<T>()\n  submitted$ = this.#submitted.asObservable()\n\n  getValue() {\n    return this.value as Required<T>\n  }\n\n  submit() {\n    if (this.valid) {\n      this.#submitted.next(this.value as T)\n    } else {\n      this.markAllAsTouched()\n    }\n  }\n}\n","import {\n  Input,\n  inject,\n  Output,\n  OnInit,\n  Component,\n  ViewChild,\n  DestroyRef,\n  TemplateRef,\n  EventEmitter,\n  ViewContainerRef,\n  ChangeDetectionStrategy,\n} from '@angular/core'\nimport {FieldType, FilterByFieldOption} from '../../interfaces'\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop'\nimport {TemplatePortal} from '@angular/cdk/portal'\nimport {BehaviorSubject, debounceTime} from 'rxjs'\nimport {FilterByForm} from './filter-by.form'\n\n@Component({\n  selector: 'dev-filter-by',\n  templateUrl: './filter-by.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterByComponent<T extends FieldType = string> implements OnInit {\n  @ViewChild('boolPortalField')\n  boolPortalField: TemplateRef<HTMLElement>\n\n  @ViewChild('numberPortalField')\n  numberPortalField: TemplateRef<HTMLElement>\n\n  @ViewChild('textPortalField')\n  textPortalField: TemplateRef<HTMLElement>\n\n  @ViewChild('datePortalField')\n  datePortalField: TemplateRef<HTMLElement>\n\n  selectedPortal: TemplatePortal\n\n  @Input()\n  form = new FilterByForm<T>()\n\n  @Input({required: true})\n  fields: FilterByFieldOption[] = []\n\n  @Output()\n  filterByChange = new EventEmitter<Record<string, unknown>>()\n\n  #selected = new BehaviorSubject<FilterByFieldOption | null>(null)\n  selected$ = this.#selected.asObservable()\n\n  #viewContainerRef = inject(ViewContainerRef)\n\n  onFieldChange(field: FilterByFieldOption) {\n    this.#selected.next(field)\n    this.form.controls.value.reset()\n    this.selectedPortal = new TemplatePortal(\n      this.#getTemplateByFieldType(field),\n      this.#viewContainerRef\n    )\n  }\n\n  constructor(private readonly destroyRef: DestroyRef) {}\n\n  ngOnInit() {\n    this.form.valueChanges\n      .pipe(debounceTime(400), takeUntilDestroyed(this.destroyRef))\n      .subscribe(({field, value = ''}) => {\n        const prop = (field as FilterByFieldOption).value\n        this.filterByChange.emit({[prop]: value})\n      })\n  }\n\n  #getTemplateByFieldType(field: FilterByFieldOption) {\n    switch (field.type) {\n      case 'bool':\n        return this.boolPortalField\n      case 'text':\n        return this.textPortalField\n      case 'number':\n        return this.numberPortalField\n      case 'date':\n        return this.datePortalField\n      default:\n        return this.textPortalField\n    }\n  }\n}\n","<form class=\"row\" [formGroup]=\"form\">\n  <mat-form-field class=\"col-3\">\n    <mat-label>Buscar por</mat-label>\n    <mat-select\n      formControlName=\"field\"\n      (selectionChange)=\"onFieldChange($event.value)\"\n    >\n      <mat-option *ngFor=\"let field of fields\" [value]=\"field\">\n        {{ field.text }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <section class=\"col-4\">\n    <ng-template [cdkPortalOutlet]=\"selectedPortal\"></ng-template>\n\n    <ng-template #boolPortalField>\n      <section>\n        <mat-checkbox formControlName=\"value\">\n          {{ (selected$ | async)?.text }}\n        </mat-checkbox>\n      </section>\n    </ng-template>\n    <ng-template #numberPortalField>\n      <mat-form-field>\n        <mat-label> {{ (selected$ | async)?.text }} </mat-label>\n        <input matInput type=\"number\" formControlName=\"value\" />\n      </mat-form-field>\n    </ng-template>\n    <ng-template #textPortalField>\n      <mat-form-field>\n        <mat-label> {{ (selected$ | async)?.text }} </mat-label>\n        <input matInput formControlName=\"value\" />\n      </mat-form-field>\n    </ng-template>\n    <ng-template #datePortalField>\n      <mat-form-field>\n        <mat-label> {{ (selected$ | async)?.text }} </mat-label>\n        <input matInput formControlName=\"value\" [matDatepicker]=\"picker\" />\n        <mat-datepicker-toggle\n          matIconSuffix\n          [for]=\"picker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n    </ng-template>\n  </section>\n</form>\n","import {FieldType, FilterBy, FilterByFieldOption} from '../../interfaces'\nimport {FormControl, Validators} from '@angular/forms'\nimport {TypedFormGroup} from '../../base'\n\nexport class FilterByForm<T extends FieldType = string> extends TypedFormGroup<\n  FilterBy<T>\n> {\n  constructor(value?: FilterByFieldOption & string) {\n    super({\n      field: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n      value: new FormControl(),\n    })\n    if (value) {\n      this.controls.field.patchValue(value)\n    }\n  }\n}\n","import {\n  Input,\n  OnInit,\n  Output,\n  Component,\n  DestroyRef,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core'\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop'\nimport {FilterFieldsForm} from './filter-fields.form'\nimport {FieldOption} from '../../interfaces'\nimport {debounceTime} from 'rxjs'\n\nfunction makeFilter<T>(fields: T[] = [], value: string | null) {\n  return fields.reduce((prev, curr) => ({...prev, [`${curr}`]: value}), {})\n}\n\n@Component({\n  selector: 'dev-filter-fields',\n  templateUrl: './filter-fields.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterFieldsComponent<T extends object> implements OnInit {\n  @Input() form = new FilterFieldsForm<T>()\n\n  @Input({required: true})\n  fields: FieldOption[] = []\n\n  @Output() filterChange = new EventEmitter<Record<string, string>>()\n\n  constructor(private readonly destroyRef: DestroyRef) {}\n\n  ngOnInit() {\n    this.form.valueChanges\n      .pipe(debounceTime(400), takeUntilDestroyed(this.destroyRef))\n      .subscribe(({fields, search = ''}) => {\n        this.filterChange.emit(makeFilter(fields, search))\n      })\n  }\n}\n","<form class=\"row\" [formGroup]=\"$any(form)\">\n  <mat-form-field class=\"col-2\">\n    <mat-label>Buscar em</mat-label>\n    <mat-select formControlName=\"fields\" multiple>\n      <mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\n        {{ field.text }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field class=\"col-8\">\n    <mat-icon matPrefix>search</mat-icon>\n    <mat-label> Busca </mat-label>\n    <input matInput formControlName=\"search\" />\n    <mat-error> </mat-error>\n  </mat-form-field>\n</form>\n","import {FormControl, FormGroup} from '@angular/forms'\n\nexport type FilterFieldsOf<T> = (keyof T)[]\n\nexport interface FilterFields<T extends object> {\n  fields: FormControl<(keyof T)[]>\n  search: FormControl<string | null>\n}\n\nexport class FilterFieldsForm<T extends object> extends FormGroup<\n  FilterFields<T>\n> {\n  constructor(fields: (keyof T)[] = []) {\n    super({\n      fields: new FormControl(),\n      search: new FormControl(),\n    })\n    this.patchValue({fields})\n  }\n}\n","export * from './filter-fields/filter-fields.component'\nexport * from './filter-fields/filter-fields.form'\nexport * from './filter-by/filter-by.component'\nexport * from './filter-by/filter-by.form'\n","import {takeUntilDestroyed} from '@angular/core/rxjs-interop'\nimport {\n  Input,\n  OnInit,\n  inject,\n  DestroyRef,\n  Component,\n  Renderer2,\n  ElementRef,\n  ChangeDetectionStrategy,\n} from '@angular/core'\nimport {\n  NgControl,\n  FormControl,\n  SelectControlValueAccessor,\n} from '@angular/forms'\nimport {FieldOption} from '../../interfaces'\n\ntype ExtraVisibleFields = 'select' | 'actions'\n\n@Component({\n  selector: 'dev-visible-fields',\n  templateUrl: './visible-fields.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n})\nexport class VisibleFieldsComponent\n  extends SelectControlValueAccessor\n  implements OnInit\n{\n  @Input({required: true})\n  fields: FieldOption[] = []\n\n  @Input() id?: string\n\n  @Input() extra: ExtraVisibleFields[] = []\n\n  get showSelectOption() {\n    return this.extra.includes('select')\n  }\n\n  get showActionsOption() {\n    return this.extra.includes('actions')\n  }\n\n  get control() {\n    return this.ngControl.control as FormControl<string[]>\n  }\n\n  constructor(\n    renderer2: Renderer2,\n    elementRef: ElementRef,\n    readonly ngControl: NgControl\n  ) {\n    super(renderer2, elementRef)\n\n    ngControl.valueAccessor = this\n  }\n\n  destroyRef = inject(DestroyRef)\n\n  ngOnInit() {\n    const idForStoreOnStorage = this.id\n\n    if (idForStoreOnStorage) {\n      const value = this.getStore(idForStoreOnStorage)\n      if (value) this.control.setValue(value)\n\n      this.control.valueChanges\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(this.setStore(idForStoreOnStorage))\n    }\n  }\n\n  getStore = (id: string) => {\n    return JSON.parse(localStorage.getItem(id) ?? 'null')\n  }\n\n  setStore = (id: string) => (value: string[]) => {\n    localStorage.setItem(id, JSON.stringify(value))\n  }\n}\n","<mat-form-field>\n  <mat-label>Campos visíveis</mat-label>\n  <mat-select [formControl]=\"control\" multiple>\n    <mat-option *ngIf=\"showSelectOption\" value=\"select\">seleção</mat-option>\n    <mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\n      {{ field.text }}\n    </mat-option>\n    <mat-option *ngIf=\"showActionsOption\" value=\"actions\">ações</mat-option>\n  </mat-select>\n</mat-form-field>\n","import {FieldOption} from './field-option'\n\nexport type FieldType = string | number | boolean | Date\n\nexport interface FilterByFieldOption extends FieldOption {\n  type: 'text' | 'number' | 'bool' | 'date'\n}\n\nexport interface FilterBy<T extends FieldType> {\n  field: FilterByFieldOption | string\n  value: T | string\n}\n","export interface FieldOption {\n  text: string\n  value: string\n}\n","export * from './field-by'\nexport * from './field-option'\n","export * from './typed-form-model'\nexport * from './typed-form-validator'\nexport * from './typed-form'\n","import {FormArray, FormControl, FormGroup} from '@angular/forms'\n\ntype GetTypedForm<T> =\n  // Caso T seja um array\n  T extends Array<infer U>\n    ? // retorne U\n      U extends string\n      ? FormControl<string>\n      : U extends number\n      ? FormControl<number>\n      : U extends boolean\n      ? FormControl<boolean>\n      : U extends Date\n      ? FormControl<Date>\n      : FormArray<\n          // e U seja um objeto\n          U extends object\n            ? // inicie a verificacao para U\n              FormGroup<TypedFormModel<U>>\n            : // ou retorne U\n              FormControl<U>\n        >\n    : // caso seja objeto\n    T extends Date\n    ? // retorne Date\n      FormControl<Date | null>\n    : // caso seja boleano\n    T extends boolean\n    ? // retorne boolean\n      FormControl<boolean>\n    : // caso seja string\n    T extends string\n    ? // retorne string\n      FormControl<T | string>\n    : // caso seja número\n    T extends number\n    ? // retorne número\n      FormControl<number>\n    : T extends object\n    ? // inicie a verificação para T\n      FormGroup<TypedFormModel<T>>\n    : // ou retorne T\n      FormControl<T>\n\ntype TypedFormModel<T> = {\n  // Verifique cada tipo do model\n  [K in keyof T]: GetTypedForm<T[K]>\n}\n\nexport type {TypedFormModel, GetTypedForm}\n","import type {AbstractControlOptions} from '@angular/forms'\n\ntype TypedFormValidator<T> = {\n  [K in keyof T]: AbstractControlOptions\n}\n\nexport type {TypedFormValidator}\n","import {FormControl, FormGroup} from '@angular/forms'\nimport {TypedFormModel} from './typed-form-model'\n\ntype TypedForm<T> = T extends object\n  ? FormGroup<TypedFormModel<T>>\n  : FormControl<T>\n\nexport type {TypedForm}\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {ReactiveFormsModule} from '@angular/forms'\nimport {PortalModule} from '@angular/cdk/portal'\nimport {MatInputModule} from '@angular/material/input'\nimport {MatFormFieldModule} from '@angular/material/form-field'\nimport {MatSelectModule} from '@angular/material/select'\nimport {MatIconModule} from '@angular/material/icon'\nimport {MatCheckboxModule} from '@angular/material/checkbox'\nimport {MatRadioModule} from '@angular/material/radio'\nimport {MatChipsModule} from '@angular/material/chips'\nimport {MatNativeDateModule} from '@angular/material/core'\nimport {MatAutocompleteModule} from '@angular/material/autocomplete'\nimport {MatDatepickerModule} from '@angular/material/datepicker'\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle'\nimport {FilterFieldsComponent} from './components'\nimport {VisibleFieldsComponent} from './components/visible-fields/visible-fields.component'\nimport {FilterByComponent} from './components/filter-by/filter-by.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatSlideToggleModule,\n    FilterFieldsComponent,\n    VisibleFieldsComponent,\n    FilterByComponent,\n  ],\n  declarations: [\n    FilterFieldsComponent,\n    VisibleFieldsComponent,\n    FilterByComponent,\n  ],\n})\nexport class UiFormsModule {}\n","export * from './lib/ui-forms.module'\nexport * from './lib/components'\nexport * from './lib/interfaces'\nexport * from './lib/types'\nexport * from './lib/base'\n","export * from './public-api'\n","export class Entity {\n  id: string\n  createdAt: Date\n  updatedAt: Date\n}\n","import {FindParams, Service} from '../interfaces'\nimport {Observable, catchError, take} from 'rxjs'\nimport {Store} from './store'\nimport {Where} from '../types'\nimport {Paged} from './paged'\n\ninterface FacadeState<T> extends Paged<T> {\n  selected: T | null\n  warning: string | null\n  loading: boolean\n  count: number\n}\n\nexport abstract class Facade<\n  T extends object,\n  S extends Service<T> = Service<T>\n> extends Store<FacadeState<T>> {\n  selected$ = this.select((state) => state.selected)\n  loading$ = this.select((state) => state.loading)\n  warning$ = this.select((state) => state.warning)\n  count$ = this.select((state) => state.count)\n  data$ = this.select((state) => state.data)\n  meta$ = this.select((state) => state.meta)\n\n  constructor(protected readonly service: S) {\n    super({\n      data: [],\n      meta: {\n        hasNextPage: false,\n        hasPreviousPage: false,\n        itemCount: 0,\n        page: 1,\n        pageCount: 0,\n        take: 10,\n      },\n      loading: false,\n      selected: null,\n      warning: null,\n      count: 0,\n    })\n  }\n\n  find(params?: FindParams<T>) {\n    const find$ = this.service.find(params).pipe(take(1))\n    find$.subscribe((response) => this.setState(response))\n  }\n\n  count(where?: Where<T>) {\n    const find$ = this.service.count(where).pipe(take(1))\n    find$.subscribe((count) => this.setState({count}))\n  }\n\n  filter(params: FindParams<T>) {\n    const find$ = this.service.filter(params).pipe(take(1))\n    find$.subscribe((response) => this.setState(response))\n  }\n\n  findOne(id: string) {\n    const findOne$ = this.service.findOne(id).pipe(take(1))\n    findOne$.subscribe((selected) => this.setState({selected}))\n  }\n\n  create(createContent: Partial<T>) {\n    const create$ = this.service.create(createContent).pipe(take(1))\n    create$.pipe(catchError(this.handleError)).subscribe((selected) => {\n      this.setState({selected})\n      this.find()\n    })\n  }\n\n  update(updateContent: Partial<T>) {\n    const update$ = this.service.update(updateContent).pipe(take(1))\n    update$.pipe(catchError(this.handleError)).subscribe((selected) => {\n      this.setState({selected})\n      this.find()\n    })\n  }\n\n  remove(id: string) {\n    const remove$ = this.service.remove(id).pipe(take(1))\n    remove$.subscribe((selected) => {\n      this.setState({selected})\n      this.find()\n    })\n  }\n\n  removeBulk(ids: string[]) {\n    const remove$ = this.service.removeBulk(...ids).pipe(take(1))\n    remove$.subscribe(() => this.find())\n  }\n\n  handleError = (err: {error: Error}, caught: Observable<T>) => {\n    if (err) {\n      this.setState({warning: err.error.message})\n      throw err.error.message\n    }\n    return caught\n  }\n}\n","export * from './entity'\nexport * from './facade'\nexport * from './page-meta'\nexport * from './paged'\nexport * from './store'\nexport * from './use-case'\n","import {PageParams} from '../interfaces'\n\nexport class PageMeta {\n  readonly page: number\n\n  readonly take: number\n\n  readonly itemCount: number\n\n  readonly pageCount: number\n\n  readonly hasPreviousPage: boolean\n\n  readonly hasNextPage: boolean\n\n  constructor({options, itemCount}: PageParams) {\n    this.page = options.page ?? 1\n    this.take = options.take ?? 10\n    this.itemCount = itemCount\n    this.pageCount = Math.ceil(this.itemCount / this.take)\n    this.hasPreviousPage = this.page > 1\n    this.hasNextPage = this.page < this.pageCount\n  }\n}\n","import {PageMeta} from './page-meta'\n\nexport class Paged<T> {\n  readonly data: T[]\n\n  readonly meta: PageMeta\n\n  constructor(data: T[], meta: PageMeta) {\n    this.data = data\n    this.meta = meta\n  }\n}\n","import {BehaviorSubject, distinctUntilChanged, map} from 'rxjs'\n\nexport abstract class Store<T> {\n  #state: BehaviorSubject<T>\n\n  protected get state(): T {\n    return this.#state.getValue()\n  }\n\n  constructor(initialState: T) {\n    const state = Object.freeze(initialState)\n    this.#state = new BehaviorSubject<T>(state)\n  }\n\n  protected select<K>(mapFn: (state: T) => K) {\n    return this.#state.asObservable().pipe(\n      map((state: T) => mapFn(state)),\n      distinctUntilChanged()\n    )\n  }\n\n  protected setState(newState: Partial<T>) {\n    this.#state.next({\n      ...this.state,\n      ...newState,\n    })\n  }\n}\n","import {Observable} from 'rxjs'\n\nexport abstract class UseCase<I, O> {\n  abstract execute(input: I): O | Promise<O> | Observable<O>\n}\n","import {Type} from '../types'\nimport {token} from './token'\n\nconst container = new Map<symbol, Type<unknown>[]>()\n\nexport function create<N extends string, T>(name: N, ...values: Type<T>[]) {\n  const uniqueToken = token(name)\n  container.set(uniqueToken, values)\n  return {\n    token: uniqueToken,\n    container,\n    add<T>(value: Type<T>) {\n      const values = container.get(uniqueToken) ?? []\n      container.set(uniqueToken, [...values, value])\n    },\n    getAll() {\n      return container.get(uniqueToken) ?? []\n    },\n  }\n}\n","export * from './container'\nexport * from './token'\n","export const token = (name: string) => {\n  const symbol: unique symbol = Symbol(name)\n  return symbol\n}\n","export const by =\n  <E, K extends keyof E>(key: K, value: E[K]) =>\n  (item: E) =>\n    item[key] === value\n","import {Where} from '../types'\n\ntype SortOrder = 'ASC' | 'DESC'\n\ntype Order<T extends object> = {\n  [K in keyof T]: SortOrder\n}\n\nexport class Collection<T extends object> extends Array<T> {\n  constructor(...items: T[]) {\n    super(...items)\n  }\n\n  order(params: Order<T>) {\n    return this.sort((a, b) => {\n      return Object.entries(params)\n        .map(([key, direction]) => {\n          const valueA = a[key as keyof T]\n          const valueB = b[key as keyof T]\n\n          if (direction === 'ASC') {\n            if (valueA < valueB) return -1\n            if (valueA > valueB) return 1\n            return 0\n          } else {\n            if (valueA > valueB) return -1\n            if (valueA < valueB) return 1\n            return 0\n          }\n        })\n        .reduce((prev, curr) => (prev > curr ? 1 : -1))\n    })\n  }\n\n  findOneBy<K extends keyof T>(key: K, value: T[K]) {\n    return this.find((item) => item[key] === value)\n  }\n\n  where(params: Where<T>) {\n    return this.filter((entity) => {\n      return Object.entries(params)\n        .filter(([, val]) => val)\n        .some(([key, val]) => entity[key as keyof T] === val)\n    })\n  }\n}\n","export * from './by'\nexport * from './collection'\nexport * from './where'\n","import {Where} from '../types'\n\nexport function where<T>(where: Where<T>) {\n  return (entity: T) => {\n    Object.entries(where)\n      .filter(([, val]) => val)\n      .some(([key, val]) => entity[key as keyof T] === val)\n  }\n}\n","export interface BulkResult {\n  affected?: number | null\n}\n","import {Observable} from 'rxjs'\n\nexport interface Create<T extends object> {\n  create(value: Partial<T>): Promise<T> | Observable<T>\n}\n","import {Observable} from 'rxjs'\n\nexport interface FindOneBy<T extends object> {\n  findOne<K extends keyof T>(\n    key: K,\n    value: T[K]\n  ): Promise<T | null> | Observable<T | null>\n}\n","import {Observable} from 'rxjs'\n\nexport interface FindOne<T extends object> {\n  findOne(value: T[keyof T]): Promise<T | null> | Observable<T | null>\n}\n","import {Where} from '../types'\nimport {PageOptions} from './page-options'\n\nexport interface FindParams<T> {\n  options?: PageOptions\n  where?: Where<T>\n}\n","import {FindParams} from './find-params'\nimport {Observable} from 'rxjs'\nimport {Paged} from './paged'\n\nexport interface Find<T extends object> {\n  find(params?: FindParams<T>): Promise<Paged<T>> | Observable<Paged<T>>\n}\n","export * from './bulk-result'\nexport * from './create'\nexport * from './find-one-by'\nexport * from './find-one'\nexport * from './find-params'\nexport * from './find'\n// export * from './page-meta'\nexport * from './page-options'\nexport * from './page-params'\n// export * from './paged'\nexport * from './remove'\nexport * from './repository'\nexport * from './service'\nexport * from './update'\n","import {Order, OrderLiteral} from '../sort/order'\n\nexport interface PageOptions {\n  readonly order?: Order | OrderLiteral\n  readonly sort?: string\n  readonly page?: number\n  readonly take?: number\n  readonly skip?: number\n}\n","import {PageOptions} from './page-options'\n\nexport interface PageParams {\n  options: PageOptions\n  itemCount: number\n}\n","import {Observable} from 'rxjs'\n\nexport interface Remove<T extends object> {\n  remove(id: string): Promise<T> | Observable<T>\n}\n","import {FindParams} from './find-params'\nimport {BulkResult} from './bulk-result'\nimport {Paged} from './paged'\nimport {Where} from '../types'\n\nexport abstract class Repository<T extends object> {\n  abstract find(params?: FindParams<T>): Promise<Paged<T>>\n  abstract count(where?: Where<T>): Promise<BulkResult>\n  abstract create(value: Partial<T>): Promise<T>\n  abstract update(value: Partial<T>): Promise<T>\n  abstract remove(id: string): Promise<T>\n  abstract removeBulk(...ids: string[]): Promise<BulkResult>\n  abstract findOne<K extends keyof T>(key: K, value: T[K]): Promise<T | null>\n}\n","import {FindParams} from './find-params'\nimport {BulkResult} from './bulk-result'\nimport {Observable} from 'rxjs'\nimport {Paged} from '../base'\nimport {Where} from '../types'\n\nexport abstract class Service<T extends object> {\n  abstract find(params?: FindParams<T>): Observable<Paged<T>>\n  abstract count(where?: Where<T>): Observable<number>\n  abstract filter(params: FindParams<T>): Observable<Paged<T>>\n  abstract create(value: Partial<T>): Observable<T>\n  abstract update(value: Partial<T>): Observable<T>\n  abstract remove(id: string): Observable<T>\n  abstract removeBulk(...ids: string[]): Observable<BulkResult>\n  abstract findOne(value: string): Observable<T | null>\n}\n","import {Observable} from 'rxjs'\n\nexport interface Update<T extends object> {\n  update(value: Partial<T>): Promise<T> | Observable<T>\n}\n","export class Cast {\n  static toString<T>(value: T) {\n    return String(value) === '[object Object]'\n      ? JSON.stringify(value)\n      : (String(value) as string)\n  }\n\n  static fromString<R>(value: string) {\n    if (!isNaN(+value)) return +value as R\n\n    try {\n      return JSON.parse(value) as R\n    } catch {\n      return value as R\n    }\n  }\n}\n","export const enumOptions = <T extends object>(value: T) =>\n  Object.entries(value).map(\n    ([value, text]) =>\n      ({value, text} as {\n        value: keyof T\n        text: string\n      })\n  )\n","export * from './cast'\nexport * from './enum-options'\n","export * from './order'\n","import {enumOptions} from '../mapper'\n\nexport enum Order {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport type OrderLiteral = `${Order}`\n\nexport const orderOptions = enumOptions(Order)\n","export type Abstract<T> = abstract new (...params: unknown[]) => T\n","export type Fn<T = void> = (...params: any[]) => T\n","export * from './abstract'\nexport * from './fn'\nexport * from './type'\nexport * from './where'\n","export interface Type<T = any> {\n  new (...params: any[]): T\n}\n","export type Where<Entity> = {\n  [P in keyof Entity]?: Entity[P]\n}\n","export * from './lib/di'\nexport * from './lib/base'\nexport * from './lib/types'\nexport * from './lib/sort'\nexport * from './lib/interfaces'\nexport * from './lib/filter'\nexport * from './lib/mapper'\n"],"names":["Store","switchMap","take","tap","AuthFacade","accessToken","authService","constructor","console","log","authUser","warning","loading","authUser$","select","state","warning$","loading$","login","signIn","setState","pipe","me","subscribe","register","createUser","createUser$","logout","Facade","GroupFacade","catchError","UserFacade","service","updatePassword","value","update$","handleError","selected","findOne","id","SignIn","AuthServiceImpl","localStorage","getItem","setItem","removeItem","http","url","post","get","of","MOCK_USER","name","username","email","MOCK_AUTH","AuthServiceMock","BaseService","GroupServiceImpl","MockService","GroupServiceMock","create","entity","crypto","randomUUID","createdAt","Date","updatedAt","collection","push","UserServiceImpl","put","UserServiceMock","Http","provideByEnv","AuthService","provideAuthService","provide","useFactory","deps","provideAuthServiceMock","useClass","provideAuthFacade","provideAuth","provideServiceMock","GroupService","provideGroupService","api","provideGroupServiceMock","provideGroupFacade","provideGroup","UserService","provideUserService","provideUserServiceMock","provideUserFacade","provideUser","CryptoService","Repository","GroupRepository","Service","JwtService","UserRepository","ActivateUserAuthUseCase","jwtService","jwtConfig","execute","input","verify","Error","CreateUserAccountUseCase","userRepository","groupRepository","cryptoService","_this","_asyncToGenerator","groups","group","password","hash","SignInUserAccountUseCase","user","findByUsernameOrEmail","verified","compare","payload","sub","sign","CommonModule","RouterModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatNativeDateModule","MatDatepickerModule","MatIconModule","SignInComponent","SignUpComponent","AccountUiAuthModule","_","_2","_3","declarations","imports","exports","ElementRef","EventEmitter","SignInForm","form","message$","focus","usernameRef","nativeElement","onSubmit","markAllAsTouched","valid","emit","getRawValue","selectors","viewQuery","SignInComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","SignInComponent_Template_form_submit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","SignUpForm","signUp","nameRef","getValue","SignUpComponent_Query","SignUpComponent_Template_form_submit_0_listener","_r1","FormControl","Validators","TypedFormGroup","nonNullable","validators","required","minLength","birthdate","MediaMatcher","Loader","inject","ChangeDetectorRef","Router","ɵɵelementContainerStart","AppComponent_ng_container_22_Template_button_click_12_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","ɵɵelementContainerEnd","_r4","ɵɵtextInterpolate1","auth_r3","AppComponent","loader","media","changeDetectorRef","authFacade","router","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","navigate","decls","vars","consts","template","AppComponent_Template","ɵɵtemplate","AppComponent_ng_container_22_Template","AppComponent_dev_loader_27_Template","ɵɵclassProp","matches","_r0","ɵɵpureFunction0","_c0","ɵɵstyleProp","active$","HttpRequest","HttpHandler","finalize","AppInterceptor","intercept","request","next","activate","handle","deActivate","ɵɵinject","i1","factory","ɵfac","BrowserAnimationsModule","provideHttp","provideLoader","BrowserModule","registerLocaleData","LOCALE_ID","UiBaseModule","BR","pt","HttpClient","HttpClientModule","HTTP_INTERCEPTORS","AuthInterceptor","AuthComponent","LoaderComponent","SharedMaterial","appRoutes","env","AppModule","bootstrap","level","account","accountGroups","accountAuth","useValue","multi","forApp","forRoot","useHash","anchorScrolling","initialNavigation","LayoutModule","i2","MatDividerModule","i3","MatSidenavModule","i4","MatMenuModule","i5","MatCardModule","i6","MatTabsModule","i7","MatToolbarModule","i8","i9","i10","authGuard","path","canActivateChild","loadChildren","then","m","AccountFeatureModule","component","pathMatch","redirectTo","BehaviorSubject","Subject","debounceTime","filter","takeUntil","tabIndex","tabIndex$","asObservable","destroy","ngOnInit","complete","onSelectedIndexChange","index","onTabChanged","signUpComponent","signInComponent","onSignUp","AuthComponent_Query","AuthComponent_Template_mat_tab_group_selectedIndexChange_1_listener","$event","AuthComponent_Template_mat_tab_group_animationDone_1_listener","AuthComponent_Template_dev_sign_in_signIn_4_listener","AuthComponent_Template_dev_sign_up_signUp_6_listener","map","err","req","bearerToken","authRequest","clone","headers","set","LoaderComponent_Template","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","error","active","distinctUntilChanged","initialState","Object","freeze","mapFn","newState","prod","dev","others","find","options","params","count","where","update","remove","delete","removeBulk","ids","InMemoryService","createDb","reqInfo","items","genId","MissingStoresError","db","DBClosedError","dbName","code","IndexedDbService","database","pendingTransactions","version","stores","openDatabase","#openDatabase","doOpenDatabase","info","deleteDatabase","#deleteDatabase","indexedDB","Promise","c","e","close","deleteRequest","window","onerror","onsuccess","#doOpenDatabase","open","result","store","objectStoreNames","contains","onupgradeneeded","createObjectStore","hasPendingTransactions","length","splice","forEach","transaction","abort","runInTransaction","transactionMode","dbRequestFn","oncomplete","Array","isArray","r","onabort","objectStore","finally","indexOf","getKeyValues","isValid","_this2","resolve","Map","cursor","openCursor","key","toString","continue","onError","PageMeta","Paged","base","impl","skip","order","sort","ord","entities","slice","a","b","itemCount","pageMetaDto","findIndex","item","affected","baseUrl","takeUntilDestroyed","Order","MatTableDataSource","DestroyRef","SelectionMenu","FeatureContainer","dataSource","selection","meta$","facade","initialize","pagination$","list","paginator","page","destroyRef","sorted$","sortChange","items$","data$","warnings$","direction","ASC","DESC","pageIndex","data","clear","warnings","snackBar","duration","columnsHasSelect","columns","includes","isAllSelected","numSelected","numRows","toggleAllRows","onCreate","ref","openCreateDialog","componentInstance","submitted$","onUpdate","openUpdateDialog","hasValue","FormDialog","ListSelectable","MatMenu","SelectionMenuComponent","contentQueries","SelectionMenuComponent_ContentQueries","dirIndex","ɵɵprojection","menu","SelectionModel","selected$","changed","NavigationEnd","MenuItemsLinkActiveDirective","elementRef","menuItemsBaseLink","menuItemsLinkActive","events","startsWith","classList","add","ɵɵdirectiveInject","inputs","MatTableModule","MatListModule","MatDialogModule","MatSnackBarModule","MatSortModule","MatPaginatorModule","FormArray","TypedFormArray","FormGroup","submitted","submit","TemplateRef","ViewContainerRef","TemplatePortal","FilterByForm","field_r10","text","tmp_0_0","ctx_r3","ctx_r7","ctx_r9","_r11","FilterByComponent","viewContainerRef","onFieldChange","field","controls","reset","selectedPortal","getTemplateByFieldType","fields","filterByChange","valueChanges","prop","#getTemplateByFieldType","type","boolPortalField","textPortalField","numberPortalField","datePortalField","FilterByComponent_Query","FilterByComponent_Template_mat_select_selectionChange_4_listener","FilterByComponent_mat_option_5_Template","FilterByComponent_ng_template_7_Template","FilterByComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","FilterByComponent_ng_template_10_Template","FilterByComponent_ng_template_12_Template","FilterByComponent_ng_template_14_Template","patchValue","FilterFieldsForm","field_r1","makeFilter","reduce","prev","curr","FilterFieldsComponent","filterChange","search","outputs","FilterFieldsComponent_Template","FilterFieldsComponent_mat_option_5_Template","Renderer2","NgControl","SelectControlValueAccessor","field_r3","VisibleFieldsComponent","showSelectOption","extra","showActionsOption","control","ngControl","renderer2","getStore","JSON","parse","setStore","stringify","valueAccessor","idForStoreOnStorage","setValue","features","ɵɵInheritDefinitionFeature","VisibleFieldsComponent_Template","VisibleFieldsComponent_mat_option_4_Template","VisibleFieldsComponent_mat_option_5_Template","VisibleFieldsComponent_mat_option_6_Template","PortalModule","MatSelectModule","MatCheckboxModule","MatRadioModule","MatChipsModule","MatAutocompleteModule","MatSlideToggleModule","UiFormsModule","Entity","meta","hasNextPage","hasPreviousPage","pageCount","count$","caught","message","find$","response","findOne$","createContent","create$","updateContent","remove$","Math","ceil","UseCase","token","container","values","uniqueToken","getAll","symbol","Symbol","by","Collection","entries","valueA","valueB","findOneBy","val","some","Cast","String","fromString","isNaN","enumOptions","orderOptions"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}