{
  "$schema": "http://json-schema.org/schema",
  "$id": "Feature",
  "title": "",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the library.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the library?",
      "pattern": "(?:^@[a-zA-Z0-9-*~][a-zA-Z0-9-*._~]*\\/[a-zA-Z0-9-~][a-zA-Z0-9-._~]*|^[a-zA-Z][^:]*)$"
    },
    "entity": {
      "type": "string",
      "description": "The name of a domain entity.",
      "x-priority": "important"
    },
    "dataAccess": {
      "type": "string",
      "description": "The data-access related to the project.",
      "$default": {
        "$source": "projectName"
      },
      "x-dropdown": "projects"
    },
    "directory": {
      "type": "string",
      "description": "A directory where the library is placed.",
      "x-priority": "important"
    },
    "projectNameAndRootFormat": {
      "description": "Whether to generate the project name and root directory as provided (`as-provided`) or generate them composing their values and taking the configured layout into account (`derived`).",
      "type": "string",
      "enum": ["as-provided", "derived"]
    },
    "buildable": {
      "type": "boolean",
      "default": false,
      "description": "Generate a buildable library.",
      "x-priority": "important"
    },
    "prefix": {
      "type": "string",
      "format": "html-selector",
      "description": "The prefix to apply to generated selectors.",
      "alias": "p"
    },
    "routing": {
      "type": "boolean",
      "default": false,
      "description": "Add router configuration. See `lazy` for more information.",
      "x-priority": "important"
    },
    "lazy": {
      "type": "boolean",
      "default": false,
      "description": "Add `RouterModule.forChild` when set to true, and a simple array of routes when set to false.",
      "x-priority": "important"
    },
    "parent": {
      "type": "string",
      "description": "Path to the parent route configuration using `loadChildren` or `children`, depending on what `lazy` is set to.",
      "x-priority": "important"
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the library (used for linting)."
    },
    "changeDetection": {
      "description": "The change detection strategy to use in the new component. Disclaimer: This option is only valid when `--standalone` is set to `true`. _Note: This is only supported in Angular versions >= 14.1.0_",
      "enum": ["Default", "OnPush"],
      "type": "string",
      "default": "Default",
      "alias": "c"
    },
    "style": {
      "description": "The file extension or preprocessor to use for style files, or `none` to skip generating the style file. Disclaimer: This option is only valid when `--standalone` is set to `true`. _Note: This is only supported in Angular versions >= 14.1.0_",
      "type": "string",
      "default": "css",
      "enum": ["css", "scss", "sass", "less", "none"]
    }
  },
  "required": ["name", "entity", "dataAccess"]
}
